<?xml version="1.0" encoding="UTF-8" ?>

<html>
  <version>1</version>

  <head>
    <title>Audizione della FSF Europe presso la Commissione Meo</title>
  </head>

  <body>

<center>
<h1>Audizione della FSF Europe presso la Commissione per il software a codice
sorgente aperto nella PA</h1>
</center>

<p>
Quella che segue è la trascrizione della presentazione svolta dalla FSF Europe
nel corso della sua audizione presso la <a
href="http://www.governo.it/GovernoInforma/Dossier/open_source/index.html">Commissione
per il software a codice sorgente aperto nella Pubblica Amministrazione</a>,
istituita in Italia dal Ministro per l'Innovazione e le Tecnologie.  Sono
disponibili anche le <a href="commissione-meo-risposte.html">risposte ufficiali
della FSF Europe al questionario della Commissione</a>.
</p>

<br></br>
<br></br>

<h3>1. Introduzione</h3>

<p>
Mi chiamo Stefano Maffulli, sono il presidente della sezione italiana della
Free Software Foundation Europe.  Presenterò la Free Software Foundation Europe
e il suo lavoro.  Parlerò di Software Libero per la Pubblica Amministrazione.
Concluderò il mio intervento con delle proposte per la Commissione.
</p>

<h3>2. Le radici del software libero</h3>

<p>
Da dove arriva il software libero? Nel 1983 Richard M. Stallman, un brillante
ricercatore del MIT di Boston si accorge di avere un problema con la nuova
stampante dipartimentale: si inceppa spesso e non c'è modo di sapere che guaio
sia capitato; spesso capita a lui e ai suoi colleghi di lanciare stampe e
andare a prenderle, per scoprire che solo poche pagine sono state prodotte.
Stallman pensa subito: "basta modificare il codice del sistema della stampante
e mi faccio avvisare via rete del problema".  Abituato ad aggiungere senza
vincoli funzionalità ai programmi, Stallman chiede a Xerox i sorgenti del
software per vederseli negare.  La scintilla accende un fuoco di consapevolezza
in lui: il software, il suo patrimonio di conoscenza non è più disponibile.  Da
qui inizia il suo lavoro di sviluppo per un sistema operativo alternativo a
Unix (allora imperante) ma che ripristina il diritto per tutti di esserne
"proprietari".
</p>

<p>
Presto si uniscono a lui altri programmatori che contribuiscono al suo
progetto.  Nel 1985 Stallman si preoccupa di rendere il codice che sta
scrivendo manutenibile, oltre che tecnicamente, anche legalmente.  Fonda la
Free Software Foundation negli USA, definisce formalmente il software libero e
redige la licenza GNU General Public License.  Attraverso di essa i diritti
dell'autore vengono trasferiti agli utenti e ai distributori del software, con
l'obbligo di mantenere tali diritti intatti nel futuro.  Questo meccanismo è
noto come <i>"Copyleft"</i>, o <i>"Permesso d'autore"</i>, in italiano.
</p>

<p>
Nel 1991 Linus Torvalds, studente finlandese, ha un altro problema: non ha un
sistema Unix completo a casa per poter studiare.  Il freddo clima norvegese lo
invoglia a scriversi un kernel simil-unix per completare il progetto GNU, cui
mancava appunto solo il kernel per essere completo.  Negli anni successivi
inizia una diffusione rapida e inesorabile di un sistema operativo e del suo
kernel.  Con la lenta maturazione del codice, GNU/Linux guadagna anche
visibilità e inizia anche a diventare un terreno fertile per iniziative
commerciali ben accolte anche dalla FSF.
</p>

<p>
Nel 1998 viene coniato il termine Open Source con la definizione (tratta dal
sito della Open Source Initiative) riportata: la sostanza non cambia, mancano
solo l'atteggiamento remissivo e il simbolismo vuoto.  I termini in Europa sono
usati in modo indifferente, ma noi della FSFE preferiamo usare i termini locali
(<i>"Logiciel Libre"</i>, <i>"Freie Software"</i> e <i>"Software Libero"</i>)
perché li riteniamo più chiari e ricchi di significato.
</p>

<h3>3. La definizione di software libero</h3>

<p>
Cosa è dunque il software libero?  Definiamo il software come libero quando è
accompagnato da una licenza che garantisce quattro diritti fondamentali:
diritto di uso senza limitazioni, diritto di studiare il codice per adattarlo
alle proprie esigenze, diritto di fare copie del software senza limiti, diritto
di modificare il software.  Attraverso il diritto d'autore, nel pieno rispetto
delle sue volontà e delle leggi, cediamo diritti agli utenti.
</p>

<h3> 4. La ristrutturazione della FSF</h3>

<p>
Nel 2001 la Free Software Foundation è diventata una rete di Fondazioni locali,
legate da rapporti di collaborazione e supporto reciproco, indipendenti tra di
loro e con autonomia decisionale.  Questo cambiamento si è reso necessario per
adattarci alla diffusione del nostro software, per renderlo più stabile e
manutenibile dal punto di vista legale.  La FSF Europe è un nodo di questo
network, completato allo stato attuale da FSF Nord America, FSF India e la
costituenda FSF Japan.  FSF Europe ha a sua volta capitoli locali in Francia,
Germania e Italia.  Altri seguiranno.
</p>

<h3>5. Le attività della FSF Europe</h3>

<p>
Le attività della FSF Europe sono legate al supporto legale, sviluppo di
software e attività di sensibilizzazione.  Dal punto di vista legale, ci
assicuriamo che le licenze GNU siano difendibili in tutti i paesi del
continente attraverso un controllo sistematico delle legislazioni locali.
Forniamo anche assistenza legale, tramite i nostri avvocati, a chiunque
(privato o amministrazione pubblica) abbia difficoltà a comprendere le licenze
libere (GPL in particolare) o si trovi in violazione di una di queste licenze.
La FSF Europe è particolarmente preoccupata dalla manutenibilità legale del
software.  I tecnici tendono a dimenticare che il software non solo deve essere
scritto bene, con processi di controllo stabili e provati, ma deve essere
difendibile in tribunale da eventuali violazioni.  Proprio ieri la FSF Europe
ha rilasciato la versione 1.0 del Fiduciary License Agreement, un modo per gli
sviluppatori per garantire che il loro software sarà sorvegliato e difeso dalla
FSF Europe, anche in sua vece o in vece di tutti i contributori che avranno
firmato l'accordo. 
</p>

<p>
Supportiamo sviluppo software; ad esempio con il progetto AGNULA, finanziato
dal FP5 - IST sarà rilasciata una distribuzione orientata alla creatività
musicale, l'arrangiamento e l'editing di musica elettronica.  I musicisti che
la stanno testando sono entusiasti della qualità del software libero incluso.
</p>

<p>
Le attività di sensibilizzazione sono portate avanti a livello comunitario e
locale.  La Commissione Europea ha inserito le raccomandazioni proposte dalla
FSFE e firmate da oltre 50 aziende nel VI programma quadro.  A livello locale
in Francia durante la campagna presidenziale siamo riusciti ad ottenere da
tutti i candidati un impegno scritto a rifiutare i brevetti sulle idee astratte
in Europa.  In germania siamo riusciti a far cambiare un legge sul copyright
che di fatto rendeva illecita la distribuzione di software libero
</p>

<h3>6. Il GNU Business Network</h3>

<p>
In questo biennio intendiamo comopletare il GNU Business Network.  Molte realtà
commerciali si rivolgono a FSF Europe per aiutarli a veicolare verso il
pubblico il valore aggiunto di diritti e indipendenza che possono dare.  Queste
aziende cercano spesso anche partner e sviluppatori.  Il GBN sarà un punto di
eccellenza per queste aziende e per i loro partner.  La FSF Europe non è mai
stata coinvolta nelle cosidette "guerre di religione", non ci interessano in
alcun modo i discorsi sostenuti da altri, esterni sia alla FSF NA che alla FSF
Europe, su cattedrali e bazaar o su modelli di sviluppo di software:
l'importante per noi è che agli utenti di software vengano garantiti i 4
diritti (studio, modifica, copia e distribuzione).
</p>

<h3>7. Software Libero e PA: le questioni tecniche</h3>

<p>
La nostra visione rispetto a Software Libero e Pubblica Amministrazione può
essere riassunta in tre punti: questioni tecniche, questioni economiche e
questioni strategiche e di prospettiva.  Le vediamo una alla volta rapidamente.
</p>

<p>
Il software libero viene spesso criticato da chi sviluppa software non libero
per una supposta incompatibilità con l'innovazione.  Mi preme per questo far
notare solo alcune delle caratteristiche salienti dei nostri sistemi.  Il
sistema GNU è l'unico sistema operativo noto veramente multipiattaforma, non
solo per progetto ma perché la licenza che lo accompagna consente a chiunque di
adattarlo per l'hardware che usa.  IBM lo ha letteralmente spalmato su tutta la
sua gamma di prodotti hardware in pochi mesi.  Il compilatore GNU gcc, il primo
componente del sistema GNU, da oltre 20 anni esiste e tecnicamente viene usato
per compilare decine di linguaggi per centinaia di piattaforme.  Non mi risulta
che esistano e siano mantenuti da 20 anni prodotti equipollenti.  Qualsiasi
scatola con dentro un processore e della ram diventa un file server per ogni
piattaforma con GNU e Linux tramite i protocolli NFS, SAMBA e Appletalk, grazie
alla portabilità del nostro software.
</p>

<p>
Questi esempi mi servono per introdurre un altro insuperabile fattore di
vantaggio rispetto alle controparti software proprietarie: uno strumento
software con licenza libera, legalmente manutenibile con licenze adattate
all'evoluzione tecnica e legale, può durare decenni.  Non esistono, o sono
fortemente limitate rispetto al mondo del sw proprietario, infatti politiche
commerciali che decretano la fine di una linea di sviluppo: se un programma ha
una sua utilità <i>può</i> essere ancora sviluppato e portato avanti.  Per la
Pubblica Amministrazione questo è un valore molto più forte che per un'azienda
(che potrebbe avere rapporti commerciali o altri legami con fornitori terzi).
</p>

<h3>8. Software Libero e PA: le questioni economiche</h3>

<p>
In un clima di ristrettezze economiche e di speranza nel "mercato" non possiamo
far altro che far notare quanto il mercato dei servizi sul software non sia
affatto libero.  Con il software libero qualsiasi fornitore è in grado di
partecipare a bandi di fornitura di supporto o modifica e adattamento di
software per la PA.  Con software proprietario, per esempio WebSphere di IBM,
solo IBM può aggiungere funzionalità o sistemare malfunzionamenti.  Il
risparmio sui costi di licenza può essere investito in altri campi: aumentare
la quantità e qualità di servizi digitali ai cittadini, per esempio, o
formazione per i dipendenti accrescendo il valore del sistema paese.  
</p>

<p>
Un ulteriore fattore di scelta per la PA è la piattaforma hardware: con
software libero è possibile, legalmente e non solo tecnicamente, scegliere
l'hardware più efficace per le proprie necessità ed equipaggiarlo con il
sistema operativo e le librerie GNU.
</p>

<h3>9. Software Libero e PA: le questioni strategiche e di prospettiva</h3>

<p>
Le questioni strategiche e di prospettiva sono legate alla possibilità di
realizzzare centri di eccellenza locali e indipendenti da aziende estere: si
svilupperebbe conoscenza strategica per la crescita del paese (sempre che sia
accompagnata da altre politiche).
</p>

<p>
I bassi costi di implementazione sono più che altro dovuti alla realizzazione
di un mercato aperto e competitivo.
</p>

<h3>10. La proposta per la commissione</h3>

<p>
La proposta per la commissione è di lavorare per tutelare il patrimonio
pubblico e dei cittadini.  Considerando che il software governa la nostra vita,
come le leggi, deve essere di libero accesso.  Pochi pensano che le competenze
per diventare idraulico o medico esistono in tutte le biblioteche.  Per il
fatto che la conoscenza (e il software è conoscenza) sia disponibile, non vuol
dire che non esista un mercato basato su di essa.
</p>

<p>
Nella valutazione dei costi di nuove strutture informatiche vogliamo far notare
che il costo totale di possesso comprende anche altri costi.  Se una scuola
riceve in regalo una sala computer per l'insegnamento di informatica, compresi
il software non-libero, il costo totale della sala non è 0, ma è 0 per la
scuola più il costo di ogni singola licenza che ogni studente deve acquisire
per studiare ed imparare a casa.  Stesso discorso per un sistema per
effetturare la dichiarazione dei redditi per via telematica.
</p>

<p>
Insistiamo che sia data attuazione alla legge 243/2000, estendendo tale legge a
tutto il software in uso alla PA.  I diritti sul software che la PA deve
reclamare, possono essere ottenuti semplicemente attraverso l'adozione diffusa
di licenze che garantiscono le libertà di uso, studio, copia e modifica.
Eventuali altri sistemi di garanzia e protezione dei consumatori potrebbero
essere valutati, ma riteniamo siano di più complessa adozione rispetto ai
meccanismi che il progetto GNU usa da venti anni.
</p>

<p>
Crediamo anche che sia necessario sanare il mercato del software.  La
situazione in cui ci troviamo non è una situazione di mercato florida, ma
contraddistinta da forti rendite di posizione.  Tali rendite devono essere
limitate tramite interventi normativi anti-trust, ripristinando la concorrenza.
In special modo ci riferiamo ai sistemi di interscambio dati tra cittadini e
PA, spesso realizzati riferendosi a standard de-facto, tralasciando gli
standard de-iure (siti web progettati per il browser più diffuso e non seguendo
gli standard del W3C).  Riteniamo inoltre che l'occhio dell'antitrust debba
rivolgersi anche verso i fornitori di basi di dati e sistemi di elaborazione
complessi, per investigare sulle pratiche commerciali di questi soggetti.
Crediamo infatti che gli investimenti siano molto più consistenti e a lungo
termine, rendendo chi acquista tali sistemi esageratamente dipendente da un
unico fornitore di software, servizi e assistenza.  Chiediamo alla Commissione
di favorire e stimolare l'adozione di formati e protocolli di interscambio dati
tra applicazioni e tra cittadini e PA documentati, aperti e di libera
implementazione, con policy chiare di brevetti royalty-free, regolati da enti
internazionali come il W3C, Oasis e altri simili e per i quali esiste
un'implementazione di riferimento rilasciata con licenza libera.
</p>

<p>
Infine chiediamo che la Commissione prenda una chiara posizione contro
l'approvazione di brevetti sul software in Europa.  Alleghiamo un documento
introduttivo all'argomento, per formalizzare l'allarme di tutti gli
sviluppatori di software europei, inclusi gli sviluppatori di software
non-libero.
</p>

  </body>
</html>
<!--
Local Variables: ***
mode: xml ***
End: ***
-->
