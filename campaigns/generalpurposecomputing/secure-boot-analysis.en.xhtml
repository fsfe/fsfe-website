<?xml version="1.0" encoding="UTF-8" ?>

<html>
  <head>
    <title>"Secure Boot": Who will control our next computers?</title>
  </head>
  <body id="article">
    <!--<p id="category">
      <a href="/freesoftware/freesoftware.html">Free Software</a>
    </p>-->

    <!-- TODO:
    - Fix some passive sentences to active ones!
    - Check for German "-" terms
    - Send new version to English native speakers! Sam! 
    -->
 
<h1>"Secure Boot": Who will control our next computers?</h1>

<p>The FSFE wants to ensure that the owners of IT devices are always in full
and sole control of them. <!-- German: permanent die volle und alleinige
Verfügungsgewalt über ihre IT-Geräte innehaben) --> </p>

<p>With a function called "Secure Boot", which will be deployed in computers
starting 2012, manufacturers of IT hardware and software components strive to
get into a position where they permanently control the IT devices they produce.
Hence such devices will be "secure" from the manufacturer's perspective, but
not necessarily from the owner's point of view: The owner may be treated as an
adversary. By preventing usages the manufacturer do not want, they can control
what a general purpose IT machine (e.g. a PC, laptop, netbook) can be used for.
In case of IT devices with internet access, they can alter these usage
restrictions any time without even informing the device owner. Thereby
IT-manufacturers at their will, can take away common rights owners of products
usually receive.</p>

<h2>Secure boot: Gatekeeper before operating system</h2>

<p>When powered on, an IT-device has to execute a startup-process, called
booting.  In case of computers this startup-process is comprised of executing
firmware, which starts a boot-loader for starting an operating system to enable
you to run your application software. In 2012 the industry-wide transition of
PCs, notebooks, servers, and other computers' firmware from conventional BIOS
to <a href="http://en.wikipedia.org/wiki/UEFI|UEFI">UEFI</a> will mostly be
complete.  Compared to conventional BIOS, UEFI bears several advantages, as
faster boot time, operating system independent drivers, and promises extended
security.</p>

<p>The security aspect is handled by a function called "Secure Boot". Since
UEFI 2.3.1 (released April 8, 2011) "Secure Boot" ensures that during the
boot-process only software will execute, which complies with one of predeployed
cryptographic signatures. This is done to prevent unwanted software from being
executed during the startup of the computer, by cryptographically verifying a
signature of each software-component (various stages of the UEFI firmware, the
boot loader, the operating system kernel, etc.) before starting it. Therefore
the cryptographic signatures to be utilised have to be deployed in the UEFI
signature database of each IT-device equipped with UEFI "Secure Boot",
<strong>before</strong> a cryptographically signed software component can be
started on that specific machine.</p>

<p>FSFE expects that the vast majority of the computer manufacturers will
implement "Secure Boot", as Microsoft announced that computer manufacturers
must implement UEFI "Secure Boot", if they want to acquire a Windows 8
certification for devices they build, e.g. for putting the "Compatible with
Windows 8" logo on them. </p>

<h2>The computer: A general purpose machine</h2>
<!-- TODO: Put that in a "info box"? -->

<p>Evolving the computer as a general purpose machine over the past decades,
our society has created a powerful tool to perform all kinds of tasks with a
single machine. Now IT manufacturers have discovered that they may have an
economic interest to arbitrarily limit what these machines can achieve.  With
"Secure Boot" the owners of IT devices will not be able to independently
determine the usage of their machines, as they cannot decide which software to
run.</p>

<p>Finally, the entity who eventually controls which software can be executed
on a device and thus determines the specific functions the device performs,
ultimately can control any data processed and stored by the device. In result,
the owner of an IT device may not be in sole control of their own data any
more.</p>

<h2>For which devices does this apply?</h2>

<p>Currently many people base their analysis of the UEFI situation on the
"Windows 8 Hardware Certification Requirements", published by Microsoft in
December 2011.  It is understood that Microsoft did and still does not have to
make any versions of these hardware-certification requirements public, as they
are the base of an individual contract between Microsoft and each hardware
manufacturer seeking to obtain Microsoft's Windows 8 Certification for their
computer-products. Hence the "Windows 8 Hardware Certification Requirements"
can change anytime without public notice, specific details of the
logo-requirements differ between manufacturers, etc.: Everything happens at
Microsoft's will and mostly behind closed doors. Thus none ought to rely on the
published version of the "Windows 8 Hardware Certification Requirements" being
static, but realise the details devised for "Secure Boot" as a "moving
target".</p>

<p>So the problem of "Secure Boot" does not necessarily only exist for
"Connected Stand-By Systems" (a large share of the future market of notebooks,
netbooks and PCs) and computers based on ARM microprocessors (mainly tablets
and mobile phones), but can be expanded to any other type of devices by
Microsoft anytime. Equally, hardware-manufacturers not producing Windows 8
devices may deploy UEFI-"Secure Boot" or other boot-processes restricted by the
help of cryptographic signatures. TiVo has been doing that for a whole decade,
and various game consoles from Sony to Microsoft are using cryptographically
restricted boot processes as well. Other manufacturers of software may employ
specifications or requirements similar to the "Windows 8 Hardware Certification
Requirements", in order to artificially restrict the capabilities of
IT-devices.</p>

<h2>Restricitons to be extended to applications?</h2>

<p>While the UEFI "Secure Boot" specification (as well as the TCG
specifications defining "Trusted Boot") covers the primary boot-process up to
the OS-kernel, the infrastructure to extend signature-checking to all software
running on a computer is mature and working in various Operating Systems. But
beside Windows 8 it is currently only enforced for Windows device drivers.</p>

<p>If all these measures would be solely under control of device owners, all
these measures could be in their best interest, helping them to enhance
IT-security in a mostly unsecured area to date: the boot-process.  I.e.
<strong>if</strong> the security subsystems specified by the UEFI consortium
and the Trusted Computing Group (TCG) would technically guarantee the owner's
permanent, full and sole control over configuration and management of these
security-subsystems, which includes all their creation, storage, use and
deletion of cryptographic keys, certificates and signatures.  But as soon as
other entities can utilise these security subsystems, this enables them to
preclude unintended or simply unforeseen usages of these IT devices.</p>

<h2>Thread to general purpose computing</h2>

<p>Hence in a broader picture the availability of true general purpose
computers under full owner control may become severely hampered.  Devices
significantly restricted by measures as "Secure Boot" under company control are
usually called appliances or special purpose computers (e.g. media centers,
telephones, book readers). Thus at least some Windows 8 devices will rather
constitute a Windows appliance than a customary computer. While there may be a
market for such computing appliances, the FSFE strongly calls for clearly
labelling such IT-devices as restricted to use models foreseen by a company, in
order to duly inform a potential buyer.</p>

<h2>Is circumventing those restrictions an option?</h2>

<p>IT savvy people may think that they have seen such measures before, and most
of them were cracked. This was the case in various models of the PlayStation
and Xbox game consoles, as well as many newer mobile phones. But the quality
and breadth is higher this time:</p>

<ul>

  <li>UEFI "Secure Boot" is primarily aimed at traditional PCs.</li>

  <li>It is backed by large parts of the IT industry, see e.g. <a
    href="TODO">the members of the UEFI-Consortium.</a></li>

  <li>Its design and specification are result of a collective effort of IT
  engineers from various companies. It draws from a decade of experience with
  signature based boot processes and hence avoids many classical pitfalls, e.g.
  the lack of a properly specified and cryptographically secured firmware
  (UEFI) update process.</li>

  <li>It utilises hardware based security subsystems, e.g. as specified by the
  TCG (TPM or MTM, and accompanying specifications): While the
  UEFI-specification does not mandate a specific implementation of "protected
  storage" for cryptographic keys, certificates and signatures,
  the recent TCG-specifications (since 2011) fit well.</li>

  <li>Security-flaws in "Secure Boot" implementations are expected (as in all
  software), but as there will be commercial competition between UEFI vendors,
  it is in their best interest to resolve these security flaws. In contrast, in
  the past only single manufacturers implemented cryptographically restricted
  boot-processes for their own, specific devices: TiVo Inc. for their TIVOs,
  Microsoft for various generations of their Xbox, as well as Sony for their
  Playstations.  </li>

</ul>

<h2>FSFE's demands</h2>

<p>For maintaining sustained growth in the development and use of software, the
broad availability of general purpose computers is crucial.</p>

<p>Thus the FSFE strongly calls for concisely informing buyers before their
purchase of the technical measures, the specific usage restrictions and their
consequences in IT-devices with signature based usage restrictions under
control of a company.</p>

<p>Furthermore, the FSFE strongly recommends to exlusively purchase IT devices,
which grant their owners full and sole control over security subsystems (e. g.
signature-based usage-restrictions), in order to maintain the ability to
install arbitrary software and lastly to retain exclusive control over ones own
data.</p>

  </body>

  <timestamp>$Date$ $Author: Matthias Kirschner$</timestamp>
  <author id="kirschner" />
  <date>
    <original content="2012-05-23" />
  </date>
</html>
