<?xml version="1.0" encoding="UTF-8"?>
<html>
  <version>1</version>

<head>
  <title>MS-OOXML - Resumen</title>
</head>

<body class="article" microformats="h-entry">

 <p id="category">
	 <a href="/activities/activities.html">Nuestro Trabajo</a>
	 </p>
  
<h1 class="p-name">MS-OOXML: un pseudo-estándar que pretende ser abierto</h1>

<div class="e-content">

<div id="introduction">

<p>Desde el comienzo del proceso de estandarización del XML- OOXML Abierto
 de Microsoft Office (en adelante MS-OOXML), la FSFE ha mostrado serias 
 dudas sobre si MS-OOXML podría considerarse estándar abierto, o incluso, 
 un estándar en absoluto. La FSFE planteó por primera vez el tema entre
 la comunidad y lideró el movimiento en contra de la estandarización de 
 MS-OOXML, siguiendo a lo largo de los años, los desarrollos 
 importantes. Pero ¿por qué MS-OOXML aún no se puede considerar un<a href="/freesoftware/standards/standards.html"> Estándar Abierto</a>, 
 a pesar de su aprobación por las organizaciones internacionales de normalización?</p>
 
 </div>

<h2 id="What-is-microsoft's-ooxml">¿Qué es el OOXML de Microsoft?</h2>

<p>MS-OOXML es un formato basado en XML para documentos de oficina desarrollados 
por Microsoft. Abarca los documentos del procesador de texto, hojas de 
cálculo, presentaciones, gráficos, diagramas, figuras y otro material gráfico. 
MS-OOXML fue adoptado por primera vez en 2006 por  <a href="http://www.ecma-international.org/publications/standards/Ecma-376.htm"> ECMA Internacional</a> - Una organización 
privada de estándares internacionales - supuestamente como un Estándar Abierto.</p>

<p>En 2008, la Organización Internacional de Normalización (ISO) también 
aprobó el MS-OOXML, como Estándar Abierto internacional bajo la  <a href="http://standards.iso.org/ittf/PubliclyAvailableStandards/index.html"> ISO/IEC 29500</a>, después de 
que Microsoft solicitara el procedimiento de vía rápida. 
ISO aprobó la norma a pesar de que se rechazara inicialmente, debido a un 
gran número de preocupaciones legítimas expresadas por sus organismos miembros nacionales.</p>
 
 
<h2 id="how-did-we-get-there">¿Cómo llegamos a eso?</h2>

<p>En 2001 se inició un esfuerzo colectivo para crear un formato de documento 
abierto, promoviendo los Estándares Abiertos y tratando de limitar el monopolio 
del software de oficina de Microsoft. El resultado de este esfuerzo que costó 
cuatro años, fue el Formato de Documento Abierto v1.0 (ODF), implementado con 
Software Libre. Se aprobó por primera vez en 2006 como una <a href="https://www.oasis-open.org/">OASIS Standard</a> y más tarde, por <a href="http://www.iso.org/iso/home.html">ISO</a>/IECJTC1 como una 
Norma internacional, bajo el código ISO/IEC 26300:2006. Dicho formato podría 
poner en peligro la posición dominante de Microsoft en el mercado de Documentos, que existia en dicho momento en 
formatos cerrados. Ante el temor a perder su poder, este último produjo su propio documento, supuestamente abierto, a través de un dudoso proceso de aprobación ISO.</p>

<p>Como se puede imaginar, el &quot;nuevo&quot; formato pareció, en una primera votación, innecesario al grupo de trabajo de ISO, 
ya que ya existía un documento estándar -ODF- y, por lo tanto, se rechazó. Sin embargo, Microsoft, 
en un proceso más político que técnico, consiguió su propuesta por la vía 
rápida a pesar de que había cláusulas concretas, que todavía encontraban resistencia 
por parte de los miembros de organismos nacionales. Y este es el punto en el 
proceso de revisión, donde se presentó una sugerencia, para crear dos sub-estándares 
de MS-OOXML, a saber, la norma ISO 29500 Transitional y la ISO 29500 Strict. Esto es 
lo que sucedió: la versión Strict fue aceptada por la ISO, mientras que la versión 
 Transitional se garantizaba a Microsoft, permitiéndole eludir ciertas 
características legales y facilitar la conversión de los antiguos formatos 
binarios de código cerrado.</p>
 
<p>Entonces ISO, dio el visto bueno a MS-OOXML en 2008, y justificó su decisión 
alegando que el mercado necesita otro documento estándar. Hay que destacar que 
Microsoft no tenía, en el momento de la aprobación, una versión disponible de Microsoft Office 
que fuera compatible con el estándar ISO/IEC que acaba de pasar. Ese fue el 
resultado de los múltiples cambios en la versión original del estándar 
para aprobar el proceso y seguir adelante.</p>

<p>En consecuencia, aunque los viejos formatos binarios (.doc, .xls y .ppt) 
continuaron con el soporte de Microsoft, MS-OOXML se convirtió en el estándar 
por defecto de todos los documentos de Microsoft Office (.docx, .xlsx y .pptx), 
a partir de microsoft Office 2007. Sin embargo, MS-OOXML Transitional es la única 
variante de uso generalizado y esto es algo a tener en cuenta: esos dos requisitos 
llevaron a una situación en la que existe un estándar, mientras que se aplica otro formato 
que se extiende por todas partes, a pesar de tener solo el estatus de 
estándar propietario e indocumentado. En otras palabras, algo que 
comenzó como un intento de permiso para un período de transición se convirtió 
en la norma, conviertiéndose en un obstáculo a cualquier demanda de interoperabilidad.</p>

<p>A vote pronto, Microsoft Office 2010 proporciona soporte de lectura para ECMA-376, 
lectura/escritura a la norma ISO/IEC 29500 Transitional, y lectura para 
la ISO/IEC 29500 Stric. Microsoft Office 2013 y 2016 soportan tanto la 
lectura como la escritura de la norma ISO/IEC 29500 Strict. Sin embargo, en todos ellos, 
la opción por defecto es el de transición, lo que significa que la norma estricta 
todavía no se usa en la práctica, a menos que los usuarios cambien la configuración 
predeterminada ad hoc.</p>

 
<h2 id="is-ms-ooxml-a-true-open-standard">¿Es MS-OOXML un verdadero estándar abierto?</h2>
 
<p>A pesar de que muchas personas comparten el supuesto de que algunos formatos ampliamente utilizados 
pueden ser identificados como Estándares Abiertos, hay algunos de ellos que no cumplen con 
los criterios enumerados en la <a href="/freesoftware/standards/def.html">definición de Estándares Abiertos</a>. MS-OOXML es uno de ellos, los denominados pseudo-estándares.</p>

<h3 id="dual-standards">Dos varas de medir.</h3>

<p>Como primera objeción, se podría ver MS-OOXML como innecesario. Los ingenieros de 
software en su lugar podrían utilizar el Formato de Documento Abierto (ODF), como un 
formato de software de oficina menos complicado que ya era un estándar internacional 
en el momento del proceso de revisión de MS-OOXML, también se basa en la tecnología 
XML y tiene las mismas capacidades teóricas. La propia Microsoft es un miembro de OASIS, 
la organización en la que se desarrolló el estándar ODF y donde continúa. Microsoft 
estaba al tanto de todo el proceso y fue invitado a participar, pero supuestamente se 
negó a hacerlo, aunque podría haber presentado sus propuestas tecnológicas a OASIS 
para su inclusión en ODF. Teniendo dos estándares superpuestos para el mismo fin sólo 
crea una nueva carga y confusión, y puede ser perjudicial para la competencia.</p>
 
<h3 id="compatibility-and-interoperability">Compatibilidad e interoperatibidad</h3>
 
<p>Una de las supuestas grandes ventajas de MS-OOXML era su capacidad de permitir la 
compatibilidad con versiones anteriores. Sin embargo, en la práctica MS-OOXML parece 
ser compatible sólo con documentos de Microsoft, mientras que su interoperatibidad con 
los productos de otros fabricantes parece haber sido hecho extremadamente complicada por diseño. 
Esto también se relaciona con el hecho de que inicialmente, se diseñó MS-OOXML para que fuera 
compatible con los formatos cerrados existentes de Microsoft, en comparación con ODF, que 
fue diseñado con el objetivo de lograr la interoperatibidad de los documentos.</p>
 
<h3 id="supporting-pre-existing-open-standards">Apoyando a los estándares abiertos preexistente</h3>
 
<p>Siempre que sea aplicable y posible, los estándares han de basarse en 
los esfuerzos anteriores de normalización y no depender de tecnologías 
propietarias y específicas del proveedor. No obstante, MS-OOXML omite
diversos estándares y utiliza, formatos específicos propios. 
Esto supone una carga considerable para todos los proveedores que estan forzados a implementar
completamente MS-OOXML. Parece cuestionable que alguien pudiera ponerlos 
en práctica de forma correcta, sobre todo cuando un estándar viene con 6000 
páginas de especificaciones que no sirven a su propósito <a href="/freesoftware/standards/minimalisticstandards.html">minimalista</a>.</p> 
 
<h3 id="proprietary-software">Extensiones Propietarias</h3>
 
<p>El uso de extensiones propietarias, específicas de la aplicación, es una conocida 
técnica empleada en la estandarización por los vendedores para abusar del monopolio. 
El comportamiento abusivo fué la causa principal en <a href="/activities/ms-vs-eu/timeline.html"> la decisión contra 
Microsoft por la Comisión Europea de 2004</a>. Por dicho motivo, es de sobra conocido, que los Estándares Abiertos 
no deben permitir que extensiones propietarias, y técnicas que distorsionan 
el mercado sean posibles sobre la base de un estándar abierto.</p>
 
<h3 id="application-independence">Independencia de la Aplicación</h3>

<p>Los estándares no deberían depender de ciertos sistemas operativos, entornos o aplicaciones, 
ya que la independencia de la aplicación e implementación es una de las 
características más importantes de todos los estándares. Sin embargo, MS-OOXML incluye referencias a determinados productos de Microsoft.</p>
 
<h2 id="conclusion">Conclusión</h2>

<p>MS-OOXML Strict no sirve a su propósito como Estándar Abierto. De forma deliberada, 
nunca se implementó, para permitir a la versión propietaria transicional ganar 
más terreno con un formato por defecto para MS Office y mantener a las personas encerradas en soluciones propietarias. <a href="/freesoftware/standards/standards.html#what-can-you-do                                ">
Vea lo que puede hacer al respecto.</a></p> 
 
</div>
 </body>
  
<sidebar promo="our-work">
<dynamic-content/>

<h2>Tabla de contenidos</h2>
<ul>
<li>
<a href="#what-is-microsoft's-ooxml">¿Qué es OOXML de Microsoft?</a>
</li>
<li>
<a href="#how-did-we-get-there">¿Como llegamos a eso?</a>
</li>
<li>
<a href="#is-ms-ooxml-a-true-open-standard">
¿Es MS-OOXML un verdadero estándar abierto?
</a>
</li>
<li style="padding-left:10px;">
<a href="#dual-standards">Dos varas de medir.</a>
</li>
<li style="padding-left:10px;">
<a href="#compatibility-and-interoperability">Compatibilidad e interoperatibidad</a>
</li>
<li style="padding-left:10px;">
<a href="#supporting-pre-existing-open-standards">Apoyando a los estándares abiertos preexistentes</a>
</li>
<li style="padding-left:10px;">
<a href="#proprietary-extensions">Extensiones propietarias</a>
</li>
<li style="padding-left:10px;">
<a href="#application-independence">Independencia de la aplicación</a>
</li>
<li>
<a href="#conclusion">Conclusión</a>
</li>
</ul>     

<h2>Otras lecturas</h2>

<ul>
	<li>
		<a href="/activities/msooxml/msooxml-interoperability.html">Reunión FSFE: los problemas de interoperabilidad con MS-OOXML
		</a>
	</li>
	<li> 
		<a href="/activities/msooxml/msooxml-idiosyncrasies.html">Reunión FSFE: DIS-29500: ¿en desuso antes de su uso?
		</a>
	</li>
	<li>
		<a href="/activities/msooxml/msooxml-questions.html">Seis preguntas a los organismos nacionales de normalización
		</a>
	</li>
</ul>

<h2>Enlaces externos de interés</h2>
<ul>

	<li> 
		<a href="http://www.groklaw.net/articlebasic.php?story=20061208135621706">Artículo sobre Groklaw: &quot;Danaergeschenk&quot; de Novell
		</a>
	</li> 
	<li>
		<a href="/activities/msooxml/msooxml-questions-for-ms.html">Artículo en la BBC: Preguntas para Microsoft en formatos abiertos
		</a>
	</li>
	<li> 
		<a href="/activities/msooxml/msooxml-converter-hoax.html">Artículo sobre Heise.de: El engaño de convertidor
		</a>
	</li>
</ul>
</sidebar>
<translator>Eulalio Barbero</translator></html>
<!--
Local Variables: ***
mode: xml ***
End: ***
-->
