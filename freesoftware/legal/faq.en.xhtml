<?xml version="1.0" encoding="UTF-8" ?>

<html>
  <version>1</version>

	<head>
		<title>FSFE Legal FAQs</title>
	</head>

	<body>
		<p id="category"><a href="/freesoftware/legal/legal.html">Legal issues in Free Software</a></p>
		
		<h1>Frequently Asked Questions on Free Software Licensing</h1>

		<h3><strong>THE BASICS</strong></h3>
<ol>
<li><a href="#Q1">What is Free Software?</a></li>
<li><a href="#Q2">What is Open Source Software?</a></li>
<li><a href="#Q3">What is proprietary software?</a></li>
<li><a href="#Q4">How can Free Software be used commercially?</a></li>

<h3><strong>COPYRIGHT</strong></h3>
<li><a href="#Q5">What is Copyright?</a></li>
<li><a href="#Q6">Can I copy someone else’s work?</a></li>
<li><a href="#Q7">Can I copy a work that has no copyright notice or license?</a></li>
<li><a href="#Q8">Which files are copyrightable?</a></li>
<li><a href="#Q9">What is a copyright holder, and what is an author?</a></li>
<li><a href="#Q10">What is public domain?</a></li>


<h3><strong>LICENSING</strong></h3>
<li><a href="#Q11">What is a license?</a></li>
<li><a href="#Q12">What is a software license?</a></li>
<li><a href="#Q13">Are there different types of software licenses?</a></li>
<li><a href="#Q14">What is copyleft?</a></li>
<li><a href="#Q15">Can I write my own Free Software license for my work?</a></li>
<li><a href="#Q16">What should I consider when choosing a license?</a></li>

<h3><strong>LICENSE COMPATIBILITY</strong></h3>
<li><a href="#Q17">What does it mean to say that licenses are compatible?</a></li>
<li><a href="#Q18">Can code covered by Free Software licenses be used in proprietary software?</a></li>
<li><a href="#Q19">What are permissive licenses?</a></li>
<li><a href="#Q20">Are all Free Software licenses compatible with each other?</a></li>
<li><a href="#Q21">What kind of licenses are compatible with permissive licenses?</a></li>
<li><a href="#Q22">Can copyleft licenses be compatible with other Free Software licenses?</a></li>
</ol>


<ol>
<li><h2 id="Q1"><strong>What is Free Software</strong></h2></li>
<p>The term “Free Software” is a regulated term created by the Free Software Foundation. It refers to software that enables its users to maintain their control and freedom over how to use such software. More specifically, Free Software is defined by users being able to enjoy the four essential freedoms: the freedoms to use, to study, to share, and to improve the software.</p>

<p>You can read more about <a href="/freesoftware/freesoftware.html">what constitutes Free Software here</a>.</p>

<li><h2 id="Q2">What is Open Source software?</h2></li>
<p>
You might have also come across the term “Open Source” software. Originally intended as a synonym for Free Software, the term “Open Source” is the other major term connected to software that also describes the complete set and range of software licenses that give users the right to use, study, share, and improve the software. The term is regulated by the Open Source Initiative (the OSI), which states that Open Source doesn't just mean access to the source code. The distribution terms of open-source software must comply with the <a href="https://opensource.org/osd">following criteria</a>:</p>

<ul>
<li>Free Redistribution: The license shall not require a royalty or other fee for the distribution by the licensee.</li>
<li>Source Code must be included</li>
<li>Derived Works must be permitted</li>
<li>Integrity of The Author's Source Code: The license may require derived works to carry a different name or version number from the original software</li>
<li>No Discrimination Against Persons or Groups</li>
<li>No Discrimination Against Fields of Endeavor</li>
<li>Distribution of License: The rights attached to the program must apply to all to whom the program is redistributed without the need for execution of an additional license by those parties.</li>
<li>License Must Not Be Specific to a Product</li>
<li>License Must Not Restrict Other Software</li>
<li>License Must Be Technology-Neutral</li>
</ul>
       
<p>You can refer to a <a href="https://opensource.org/licenses/category">list of approved Open Source licenses here</a>.</p>

<li><h2 id="Q3">What is proprietary software?</h2></li>

<p>
Proprietary software is the opposite of Free Software. This term is used to refer to software that is distributed under restrictions that prevent users from enjoying the <a href="Q1">four essential freedoms</a>. Even software that is distributed gratis can be considered proprietary, if its restricts users from any of the four essential freedoms.</p>

<p>
The term “commercial software” is sometimes used carelessly to refer to proprietary software. This would be incorrect: as explained below, Free Software does not exclude commercial use.</p>

<li><h2 id="Q4">How can Free Software be used commercially?</h2></li>

<p>
Free Software can be sold, as long as the buyers are not restricted from sharing copies of the software after their purchase. Hence, requiring a fee for any copy distributed by the user is not permitted. Free Software can also be commercialized in other ways, such as by selling support, services, and certification. Free Software remains free as long as the <a href="Q1">four essential freedoms</a> outlined above are afforded to users.</p>

<li><h2 id="Q5">What is copyright?</h2></li>

<p>
Copyright is a legal construct that grants someone exclusive rights over a creative work. The most important exclusive right is in the name: the right to produce copies. Only the copyright holder is allowed to reproduce a work and to give new copies of their work to third parties. Additionally, the copyright holder has the exclusive right to modify the work and to make it publicly available (e.g. offering it up for download).</p>

<p>
Usually, the author is the copyright owner, but copyright is often transferred to the author’s employer, in many cases automatically. This is often stated in an employee’s employment contract.</p>

<p>
You do not need to do anything to gain copyright. As soon as you make a creative work, you (or your employer) inherently possess the copyright over it.</p>

<li><h2 id="Q6">Can I copy someone else’s work?</h2></li>
<p>
If someone else has made their work available for you under a Free Software license, you can incorporate their work into your project.</p>

<p>
When you put the work in one of the files in your project, you should add an SPDX-FileCopyrightText tag for the copyright holder(s) and an SPDX-License-Identifier tag for the license(s) under which the work was made available. You can learn more about how to do this with our <a href="https://reuse.software">REUSE initiative</a>.</p>

<li><h2 id="Q7">Can I copy a work that has no copyright notice or license?</h2></li>
<p>
Before you proceed, always first make sure that you can find the copyright and licensing information elsewhere. Some projects only include this information in the root directory or in their README file.</p>

<p>
If the work has no license, that means that you do not have the right to copy it, or it is in the <a href="Q10">public domain</a>. If you believe that this is a mistake and the author clearly meant for you to be able to copy this work, you should contact the author and ask them to license their work. Feel free to refer them to our <a href="https://reuse.software">REUSE initiative</a> on the best practices to do this.</p>

<li><h2 id="Q8">Which files are copyrightable?</h2></li>
<p>
All files that are original works of authorship are copyrightable. In essence. If someone sat down typing their own original thoughts on a keyboard, then that person holds copyright over the output. Common examples are source code, documentation, audio, and video.</p>

<p>
However, there are some edge cases. For example, the program</p>

	<p><i>print("Hello, user!")</i></p>

<p>
probably does not meet the threshold of originality because it is too trivial. Similarly, data files and configuration files may not meet that threshold either.</p>

<li><h2 id="Q9">What is a copyright holder, and what is an author?</h2></li>
<p>
In these resources, we maintain a distinction between the copyright holder and the author. The author (also known as creator) is the person who sat down and created a work. Think of the author as a programmer, writer, or artist.</p>

<p>
The copyright holder is the person who has the exclusive rights over that work. Often the author and the copyright holder are the same. However, if the author is being paid by their employer to create a work, the employer is the copyright holder.</p>

<p>
Keep in mind that in some jurisdictions, the word "author" is often used as a synonym for "copyright holder". In other jurisdictions, authors maintain some rights over their work even if they are not the copyright holder.</p>

<li><h2 id="Q10">What is public domain?</h2></li>
<p>
The public domain consists of all the creative work (including software) to which no copyright applies. The rights to these works may have expired, been expressly waived, or may be inapplicable. As rights vary by country and jurisdiction, the <a href="https://creativecommons.org/publicdomain/zero/1.0/">Creative Commons CC0 1.0 Universal (CC0) License</a> can be used to waive copyright to the extent you may have these rights in your work.</p>

<p>
Please note that the <a href="Q7">absence of a license</a> does not make a software free to use. Software is copyrighted by default, so unless it has been explicitly and validly placed in the public domain, using code without a license may be considered copyright infringement.</p>

<li><h2 id="Q11">What is a license?</h2></li>
<p>
One problem with copyright (as it relates to software) is that it makes software unshareable by default. A license changes that. A license defines the terms under which the copyright holder allows the recipient of the license to use (i.e. to run, copy, distribute and/or modify) the software. If the license allows the recipient to use, study, share, and improve the software, then that software is Free Software.</p>

<li><h2 id="Q12">What is a software license?</h2></li>
<p>
Generally, a license is an authorization to use, release, or distribute someone else’s property. This includes intellectual property such as a piece of text, a song, or software.</p>

<p>
Software licenses tell people how the rights holder (usually the author of the software) wants the software to be used and what freedoms, or restrictions, the software has. Without a license, any use of the software is prohibited by default except in the case of a statutory exception to copyright.</p>

<p>
Please note that the absence of a license does not make a software free to use. Software is copyrighted by default, so unless it has been explicitly and validly placed in the <a href="Q10">public domain</a>, using code without a license may be considered copyright infringement.</p>

<li><h2 id="Q13">Are there different types of software licenses?</h2></li>
<p>
Yes. Software licenses can be classified according to the rights granted or retained by the copyright owner. When the owner of a software waives all of these rights, the software is in the Public Domain. Please note that a complete waiver of copyright may not work in all jurisdictions. For such cases, use of the <a href="Q10">CC0 License</a> achieves this goal practically.</p>

<p>
If a software is under a proprietary license, only a few rights are granted; for example, the right to use program but not to distribute copies of it. If the license grants the four essential freedoms to use, study, share and improve the software, it is a Free Software license. You can find here lists of approved <a href="https://www.gnu.org/licenses/license-list.en.html">Free Software</a> and <a href="https://opensource.org/licenses/category">Open Source</a> licenses. For other license categories, <a href="https://github.com/LeChasseur/ifrOSS/blob/master/Lizenzcenter.md">here is a list prepared by IfrOSS</a>.</p>

<li><h2 id="Q14">What is copyleft?</h2></li>
<p>
Copyleft is a form of Free Software licensing that gives permission for a user to enjoy the four freedoms of Free Software, under the condition that those freedoms remain intact in further distribution of the software or derivative works. That’s why copyleft licenses are also called “reciprocal licenses”. This is in contrast to “permissive or non-reciprocal” licenses, which, unlike copyleft licenses, allow the creation of derivative versions of the software with different license terms from the original, which can in some cases result in a derivative work being placed under a proprietary license.</p>

<p>
In practical terms, having a copyleft license would generally mean that the derivative and/or combined work has to be licensed under the same license as the original work. As a result, this ensures that a copylefted piece of Free Software can remain free, and cannot be transformed into proprietary software.</p>

<p>
An example of a copyleft license is the <a href="https://www.gnu.org/licenses/gpl-3.0.html">GNU General Public License</a>. Under this license, derivative works can only be distributed under the same license terms. This is distinct from permissive (non-reciprocal) licenses, which include the commonly used <a href="https://opensource.org/licenses/MIT">MIT License</a> and <a href="https://www.apache.org/licenses/LICENSE-2.0">Apache License 2.0</a>.</p>

<li><h2 id="Q15">Can I write my own Free Software license for my work?</h2></li>
<p>
Anyone can write their own Free Software license to dictate the terms and conditions of use of their work. However, we strongly recommend you to use an existing well-known license, instead of making up your own. </p> 

<p>
Licenses should be written to apply in complex legal issues, and people are more likely to use works under established and existing licenses whose legal effects are well known and have been clearly documented. The legal effects of a new license would be ambiguous, and this would have the effect of discouraging users from adopting your software.</p>

<p>
Another reason to not write your own license is to prevent license proliferation. There are already numerous licenses available with very similar terms, which are often incompatible with each other. The standardization of license terms can make things easier for everyone. Conversely, inventing a new license would make it harder for the community to keep track of all available licenses and would be a hindrance to developers who simply want to combine code under different licenses.</p>

<li><h2 id="Q16">What should I consider when choosing a license?</h2></li>
<p>
Having a Free Software license is the best way to protect your project’s contributors and users. A license can determine the way people contribute to the project and how the software will be used and shared.</p>

<p>
If you are taking part in a project that has already determined which licenses to use, the best way to contribute is to continue using that project’s license. Some <a href="https://choosealicense.com/community/">communities</a>have strong preferences for particular licenses. If you want to participate in one of these communities, it will be easier to use the preferred license even if you’re starting a brand new project with no existing dependencies. However, if you don’t see your project as part of a community, you have more flexibility with which FOSS license to choose.</p>

<p>
There are two objectives to pursue with a FOSS license:</p>

<ol>
<li>Make the code as simple and permissive as possible. If you plan to let people and organisations to use your code in the most simple way, permissive licenses let people do almost anything they want with your project, including to make and distribute closed source versions.</li>
<li>Protecting the code’s freedom. Copyleft protects software freedom, permitting people to do almost anything they want with your project, except to distribute proprietary versions.</li>
</ol>

<li><h2 id="Q17">What does it mean to say that licenses are compatible?</h2></li>

<p>
When your project combines two pieces of Free Software into one, or merges code from one into another, it is important to pay attention to whether the licenses of each software or code allow this combination, or prohibit it. If the licenses allow it, the licenses can be said to be “compatible” with one another.</p>

<p>
If they prohibit it, the licenses can be said to be “incompatible” with one another. In other words, we say that several licenses are compatible with each other if if it possible to combine code under these different licenses, while still complying with the terms and conditions of all of these licenses. It is therefore important that, when you incorporate existing code from a third party, you ensure that the license of that third party code is compatible with the license that you intend to issue your software project under.</p>

<p>
Being compatible also means that code under one Free Software license can be combined with code under another, and the resulting software can be distributed under either Free Software license without violating the terms of the other.</p>

<p>
Using incompatible licenses may result in copyright infringement.</p>

<li><h2 id="Q18">Can code covered by Free Software licenses be used in proprietary software?</h2></li>

<p>
Generally, Free Software licenses allow anyone to modify the code covered, and to redistribute it in both its original and modified form. In principle, this could result in redistribution of the code and its derivative works under a proprietary license.</p>

<li><h2 id="Q19">What are permissive licenses?</h2></li>

<p>
Permissive Free Software licenses (also known as non-copyleft licenses) allow their code to be used in proprietary derivative works. In such a case, the derivative work will still be proprietary, not withstanding that it contains code from a source that is covered by a Free Software license. Examples of permissive licenses that allow covered code to be used in proprietary derivative works include the Apache license, the MIT license, and BSD licenses.</p>

<p>
Conversely, copyleft licenses like the GNU General Public Licenses (GPL) require that any derivative work must be distributed under the same terms, and be Free Software as well.</p>

<li><h2 id="Q20">Are all Free Software licenses compativle with each other?</h2></li>

<p>
No. While all of the commonly-used permissive Free Software licenses are compatible with
each other, copyleft licenses (that do not allow their covered code to be used in proprietary
software) can and are prone to creating license incompatibilities, depending on each unique
situation and the licenses involved.</p>

<li><h2 id="Q21">What kind of licenses are compatible with permissive licenses?</h2></li>

<p>
Probably all permissive licenses are compatible with each other, as they do not contain
inconsistent provisions. Different license conditions must be met cumulatively.</p>

<li><h2 id="Q22">What kind of licenses are compatible with permissive licenses?</h2></li>

<p>
Because copyleft licenses provide that derivative works may only be used under the same
license conditions, copyleft licenses are only compatible with other open source licenses when
one of the following conditions is met:</p>

<ol>
<li>
The other open-source license does not contain any license requirements that are not provided by the compatible copyleft license. This is the case with the BSD license without an advertising clause, whereas the BSD license with an advertising clause contains an information requirement that the GPL and other copyleft licenses do not provide.</li>

<li>
The other open-source license contains a special compatibility or opening clause. This is the case for example in sec. 3 of the LGPL Version 2.1, that permits the use of LGPL code under the GPL. GPLv3 contains a compatibility clause for the Affero GPL and opening clauses for Apache license 2.0 and other licenses. The European Public License (EUPL) and German free software license (d-fsl) contain compatibility clauses for the GPL.</li>
</ol>

</ol>
					
	</body>

</html>

<!--
Local Variables: ***
mode: xml ***
End: ***
-->
