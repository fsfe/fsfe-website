#!/usr/bin/env bash

# Check dependencies
deperrors=''
for depend in git xmllint sed file grep bash; do
  if ! which "$depend" >/dev/null 2>&1; then
    deperrors="$depend $deperrors"
  fi
done
if [ -n "$deperrors" ]; then
  cat <<-EOF
	The githook script depends on some other programs to function.
	Not all of those programs could be located on your system.
	Please use your package manager to install the following
	programs: $deperrors

	Your commit has therefore been aborted.  
	EOF
  exit 1
fi >>/dev/stderr

GIT_ROOT=$(git rev-parse --show-toplevel)

# CHECK XML SYNTAX
TESTS=0
for xmlfile in $(
  git diff --staged --name-only | grep -E "(\.xhtml$|\.xml$|\.xsl$)"
); do
  if [ -e "${xmlfile}" ]; then
    xmllint --noout --nonet "${xmlfile}"
    TESTS=$((TESTS + $?))
  fi
done

if [ $TESTS -gt 0 ]; then

cat <<EOF >&2
  === SYNTAX ERROR ===
  One or more files failed the XML syntax check!

  The error log above will help you to identify the error. Read it from
  the top. The numbers behind the file name point to the line number in
  the file where the error has been detected.

  Check this line and its surroundings for XML/HTML tags that have not 
  been closed correctly, errors with special characters like "&", or
  other syntactical mistakes.

  The commit has been aborted. You have to fix the problem first.
EOF

  exit $TESTS
fi

# CHECK FOR NEWLY INTRODUCED TAGS
NEWTAGS=0
FILES=""
# test all newly staged (added) XML files in /news and /events
for xmlfile in $(
  git diff --staged --name-only | grep -E "^(news/|events/).*(\.xhtml$|\.xml$|\.xsl$)"
); do
  hit=0
  tags=""
  # go through all tags in this file
  # make only a new line a field separator to support tags with spaces inside (which is not recommended)
  OLDIFS=$IFS
  IFS=$'\n'
  for tag in $(grep -Ei "<tag.*?>.+?</tag>" "${xmlfile}" | sed -E "s|.*<tag.*?>(.+?)</tag>.*|\1|g"); do
    # check if this tag does exist in any other news/event item
    if ! git grep -ilE "<tag.*?>${tag}</tag>" news/ events/ | grep -vq "${xmlfile}"; then
      hit=1
      tags="${tag}, ${tags}"
      NEWTAGS=$((NEWTAGS + 1))
    fi
  done
  IFS=$OLDIFS   # reset IFS, usually " \t\n"
  # if any new tag has been found, enlist them
  if [ $hit != 0 ]; then
    tags="${tags%, }"
    FILES="${FILES}|${xmlfile} (new tag(s): ${tags})"
  fi
done

if [ $NEWTAGS -gt 0 ]; then
  cat <<EOF >&2
  === NEW / DUPLICATED TAG(S) ===
  Your commit introduced $NEWTAGS tag(s) which did not exist before in
  our news or event items!
  $(echo "${FILES}" | sed -E -e "s/\|/\n  - /g")

  Please make sure that you use already used tags, and only introduce a
  new tag e.g. if it's about a new campaign that will be more often
  mentioned in news or events. If you feel unsure, please ask
  <web@lists.fsfe.org>.

  Here you will find the currently used tags:
  https://fsfe.org/tags/tags.html

  Your commit has been executed anyway. Please make another commit to
  replace a new tag with an already existing one unless you are really
  sure. Thank you.

EOF

fi


# CHECK FOR HTML FILE EXTENSION
NAMEERRORS=0
FILES=""
# find all newly staged (added) .html files
for htmlfile in $(
  git diff --staged --name-only | grep -Ei "(\.html$)"
); do
  if [ -e "${htmlfile}" ]; then
    FILES="${FILES}|${htmlfile}"
    NAMEERRORS=$((NAMEERRORS + 1))
  fi
done

if [ $NAMEERRORS -gt 0 ]; then

cat <<EOF >&2
  === FILE EXTENSION ERROR ===
  One or more files in your commit have a wrong file extension.

  The following files have ".html" as files extension:
  $(echo "${FILES}" | sed -E -e "s/\|/\n  - /g")

  This creates problems with our build system. It is supposed to create
  the final HTML files from the .xhtml source files. So please make
  sure you follow the format for the XHTML files, and to name them
  accordingly.

  The commit has been aborted. You have to fix the problem first.
EOF

  exit $NAMEERRORS
fi


# CHECK ENCODING
ENCERRORS=0
FILES=""
# test all newly staged (added) .html/.xml/.xhtml files
for xmlfile in $(
  git diff --staged --name-only | grep -E "(\.xhtml$|\.xml$|\.xsl$)"
); do
  if [ -e "${xmlfile}" ]; then
    regex="(utf-8|us-ascii)"
    if ! [[ $(file -b --mime-encoding "${xmlfile}") =~ $regex ]]; then
      FILES="${FILES}|${xmlfile}"
      ENCERRORS=$((ENCERRORS + 1))
    fi
  fi
done

if [ $ENCERRORS -gt 0 ]; then

cat <<EOF >&2
  === FILE ENCODING ERROR ===
  One or more files in your commit have a wrong encoding.

  The following files are not UTF-8 encoded:
  $(echo "${FILES}" | sed -E -e "s/\|/\n  - /g")

  For the FSFE website, we strongly prefer UTF-8 encoded files.
  Everything else creates problems. Please change the file encoding in
  your text editor or with a special tool.

  The commit has been aborted. You have to fix the problem first.
EOF

  exit $ENCERRORS
fi


# CHECK FOR COMMON ERRORS IN NEWS/EVENT FILES
COMMONERRORS=0
FILES_NAME=""
FILES_DATE=""
# test all newly staged (added) XML files in /news and /events
for xmlfile in $(
  git diff --staged --name-only | grep -E "^(news/20[0-9]{2}/|news/nl/|news/podcast/|events/20[0-9]{2}/).*(\.xhtml$|\.xml$)"
); do
  if [ -e "${xmlfile}" ]; then
    FILENAME="$(basename "${xmlfile}")"
    # file naming scheme
    regex="^((nl-20[0-9]{4})|episode-[0-9]{1,3}|(news|event)-20[0-9]{6}-[0-9]{2})\.[a-z]{2}\.(xml|xhtml)$"
    if ! [[ $FILENAME =~ $regex ]]; then
      FILES_NAME="${FILES_NAME}|${xmlfile}"
      COMMONERRORS=$((COMMONERRORS + 1))
    fi
    # newsdate attribute
    regex="^20[0-9]{2}-[0-9]{2}-[0-9]{2}$"
    if grep -qE "<html\s*newsdate=\".*?>" "${xmlfile}"; then
      newsdate=$(grep -E "<html\s*newsdate=\".*?>" "${xmlfile}" | perl -pe 's/.*newsdate="(.+?)".*/\1/')
      if ! [[ $newsdate =~ $regex ]]; then
        echo "$xmlfile: $newsdate"
        FILES_DATE="${FILES_DATE}|${xmlfile}"
        COMMONERRORS=$((COMMONERRORS + 1))
      fi
    fi
  fi
done

if [ $COMMONERRORS -gt 0 ]; then

cat <<EOF >&2
  === COMMON NEWS/EVENT ERRROR ===
  One or more files in your commit contain typical mistakes for news
  and event items.
EOF

if [[ -n $FILES_NAME ]]; then
cat <<EOF >&2

  The following files do not follow the naming scheme for news and
  events:
  $(echo "${FILES_NAME}" | sed -E -e "s/\|/\n  - /g")

  The scheme is:
    * "news-20YYMMDD-01.en.xhtml" for news
    * "nl-20YYMM.en.xhtml" for newsletters
    * "episode-N.en.xhtml" for podcast episodes
    * "event-20YYMMDD-01.en.xml" for events

  If there is more than one news item per date, count the "-01"
  onwards. Of course, the ".en" can also be the code for another
  language we support.
EOF
fi

if [[ -n $FILES_DATE ]]; then
cat <<EOF >&2

  The following files do not follow the scheme for the newsdate attribute:
  $(echo "${FILES_DATE}" | sed -E -e "s/\|/\n  - /g")

  The scheme is "20YY-MM-DD", so the respective line should look
  something like this: <html newsdate="2020-01-01">
EOF
fi

cat <<EOF >&2

  The commit has been aborted. You have to fix the problem first.
EOF

  exit $COMMONERRORS
fi


# CHECK TRANSLATIONS WHICH WILL BE OUTDATED
ALLFILES=$(git diff --staged --name-only | grep -E "(\.xhtml$|\.xml$)")
ENFILES=$(echo "${ALLFILES}" | grep -E "\.en\.")
OUTDATED=0
TEXT=

for file in $ENFILES; do
  WARN=
  # Get file extension
  EXT="${file##*.}"
  # remove "en.$EXT"
  BASE=$(echo "${file}" | sed -E "s/\.[a-z][a-z]\.$EXT//")
  LANGS_UP=$("${GIT_ROOT}"/tools/check-translation-status.sh -f "${file}" -o up)

  # check whether previously up-to-date translations will be in this commit
  for trans in $LANGS_UP; do
    trans="${BASE}.${trans}.${EXT}"
    if ! echo "${ALLFILES}" | grep -Eq "^${trans}$"; then
      OUTDATED=$((OUTDATED + 1))
      WARN="${WARN}, ${trans}"
    fi
  done
  WARN=$(echo "${WARN}" | sed -E "s/^, //")
  # only add to list of outdated files if at least 1 warning has been found
  if [ -n "${WARN}" ]; then
    TEXT="${TEXT}|${file} => ${WARN}"
  fi
done

if [ $OUTDATED -gt 0 ]; then
  cat <<EOF >&2
  === OUTDATE WARNING ===
  Your commit caused ${OUTDATED} previously up-to-date translations 
  to become outdated!

  If you made non-content changes to the English base files, 
  consider making a fake-commit to these translations:

  - $(echo "${TEXT}" | sed -E -e "s/^\|//" -e "s/\|/\n  - /g")

  Read more: https://wiki.fsfe.org/TechDocs/Mainpage/Translations/Outdated

  The commit will be executed, but please address the problem appropriately.
EOF

fi
