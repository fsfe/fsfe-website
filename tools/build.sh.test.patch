--- build.sh	2011-01-15 14:46:07.000000000 +0100
+++ build-test.sh	2011-01-15 14:47:31.000000000 +0100
@@ -2,38 +2,38 @@
 # -----------------------------------------------------------------------------
 # Web page build script
 # -----------------------------------------------------------------------------
-# This script is called every 5 minutes on www.fsfe.org to rebuild the
+# This script is called every 5 minutes on test.fsfe.org to rebuild the
 # HTML pages from the .xhtml, .xml and .xsl source files. Most of the work,
-# however, is done by the Perl script build.pl.
+# however, is done by the Perl script build-test.pl.
 # -----------------------------------------------------------------------------
 
-SOURCE=/home/www/fsfe
-DEST=/home/www/html
-TMP=/home/www/tmp.$$
-STATUS=/var/www/web
+SOURCE=/home/www/fsfe-test
+DEST=/home/www/html-test
+TMP=/home/www/tmp-test.$$
+STATUS=/var/www/web-test
 ALARM_LOCKFILE=alarm_lockfile
 MAKEFILE_PL=${SOURCE}/Makefile.PL
-SVNUPOUTFILE=/tmp/fsfe-svnup-out
-SVNUPERRFILE=/tmp/fsfe-svnup-err
+SVNUPOUTFILE=/tmp/fsfe-test-svnup-out
+SVNUPERRFILE=/tmp/fsfe-test-svnup-err
 
 # Since we must grep for svn output messages,
 # let's ensure we get English messages
 export LANG=C
 
-# If there is a build.pl script started more than 30 minutes ago, mail alarm
-BUILD_STARTED=$(ps --no-headers -C build.pl -o etime | cut -c 7-8 | sort -r | head -n 1)
+# If there is a build-test.pl script started more than 30 minutes ago, mail alarm
+BUILD_STARTED=$(ps --no-headers -C build-test.pl -o etime | cut -c 7-8 | sort -r | head -n 1)
 if [[ -n "$BUILD_STARTED" && "10#${BUILD_STARTED}" -gt 30 && ! -f ${STATUS}/${ALARM_LOCKFILE} ]] ; then
   echo -e "
-  A build.pl script has been running for more than 30 minutes!
+  A build-test.pl script has been running for more than 30 minutes!
   
   Please:
   
-  - run 'ps aux | grep build.pl' and kill build.pl processes older than 30 minutes
-  - Check the build script log at http://status.fsfe.org/web/
+  - run 'ps aux | grep build-test.pl' and kill build-test.pl processes older than 30 minutes
+  - Check the build script log at http://status.fsfe.org/web-test/
   - Fix the cause of the problem
   - Delete the lockfile ${STATUS}/${ALARM_LOCKFILE}
 
-  " | mail -s "www.fsfe.org: build.pl warning" system-hackers@fsfeurope.org
+  " | mail -s "test.fsfe.org: build-test.pl warning" system-hackers@fsfeurope.org
 
   # This lockfile avoids sending the mail alarm more than once;
   # it must be deleted when the problem is solved.
@@ -64,7 +64,7 @@
 rm -rf ${TMP%.*}.*
 
 # -----------------------------------------------------------------------------
-echo "$(date)  Updating source files from SVN."
+echo "$(date)  Updating source files from SVN test branch."
 # -----------------------------------------------------------------------------
 
 # Update the svn working copy and check if any files were updated.
@@ -97,7 +97,7 @@
 if test ! -s ${SVNUPOUTFILE} \
     -a "$(date -r ${STATUS}/last-run +%F)" == "$(date +%F)" \
     -a "$1" != "-f" ; then
-  echo "$(date)  No changes to SVN."
+  echo "$(date)  No changes to SVN test branch."
   echo "$(date)  $(svn info 2>/dev/null | grep '^Revision')"
   # In this case we only append to the cumulative status-log.txt file, we don't touch status-finished.txt
   cat ${STATUS}/status.txt >> ${STATUS}/status-log.txt
@@ -105,10 +105,10 @@
 fi
 
 
-# Make sure build.sh and build.pl are executable
+# Make sure build-test.sh and build-test.pl are executable
 # TODO: this can be removed once we set the "executable" svn property
 # to these files
-chmod +x tools/build.sh tools/build.pl
+chmod +x tools/build-test.sh tools/build-test.pl
 chmod +x cgi-bin/weborder.pl cgi-bin/stacs-register-capacity.pl
 chmod +x cgi-bin/stacs-register-workshop.pl
 
@@ -129,9 +129,9 @@
 touch ${STATUS}/last-run
 
 if test "x`hostname`" = "xekeberg"; then
-  tools/build.pl -t 4 -q -o ${TMP} -i .
+  tools/build-test.pl -t 4 -q -o ${TMP} -i .
 else
-  tools/build.pl -q -o ${TMP} -i .
+  tools/build-test.pl -q -o ${TMP} -i .
 fi
 
 if test $? -ne 0; then
@@ -174,7 +174,7 @@
 echo "$(date)  Generating translation logs."
 # -----------------------------------------------------------------------------
 
-tools/translation-log.sh ${DEST}/translations.log ${STATUS}
+tools/translation-log-test.sh ${DEST}/translations.log ${STATUS}
 
 # -----------------------------------------------------------------------------
 echo "$(date)  Build complete."
@@ -182,6 +182,4 @@
 
 cp ${STATUS}/status.txt ${STATUS}/status-finished.txt
 cat ${STATUS}/status-finished.txt >> ${STATUS}/status-log.txt
-cp tools/status.php ${STATUS}/index.php
-cp tools/qa/reports/* ${STATUS}/qa/reports/
-
+cp tools/status-test.php ${STATUS}/index.php
