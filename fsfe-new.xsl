<?xml version="1.0" encoding="ISO-8859-1"?>

<xsl:stylesheet version="1.0"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

  <xsl:output method="html"
           encoding="ISO-8859-1"
           doctype-public="-//W3C//DTD HTML 4.0 Transitional//EN"
           doctype-system="http://www.w3.org/TR/REC-html40/loose.dtd"
           indent="yes"
           />

  <xsl:template match="buildinfo">
    <xsl:apply-templates select="node()" />
  </xsl:template>

  <xsl:template match="buildinfo/document">
    <xsl:element name="html">
      <xsl:attribute name="lang">
        <xsl:value-of select="/buildinfo/@language" />
      </xsl:attribute>
      <xsl:apply-templates select="node()" />
    </xsl:element>
  </xsl:template>

  <xsl:template match="body">
    <body>
      <xsl:comment>

        DO NOT MODIFY THIS DOCUMENT. IT WAS GENERATED BY XSLT PROCESSING
        AND YOUR MODIFICATIONS WILL BE LOST. THE SOURCE OF THE DOCUMENT
        IS IN THE .xml FILE USE make all TO REGENERATE

      </xsl:comment>
      <table width="100%">
        <tr>
          <td>
            <a href="/"><img alt="[FSFE Logo]" src="/graphics/global/logo.png" border="0" /></a>
          </td>
          <td class="focus">
            <table class="focus">
              <tr>
                <td colspan="2" class="focus-box">
                  <div align="center">
                   <form action="/cgi-bin/nph-redirect.cgi" method="get">
                     <select name="address" onchange="window.location.href=this.options[this.selectedIndex].value">
                       <option value="#"> - <xsl:value-of select="/buildinfo/textset/text[@id='select']" /> -</option>
                       <option><xsl:attribute name="value">http://www.fsfeurope.org<xsl:value-of select="/buildinfo/@filename" />.<xsl:value-of select="/buildinfo/@language" />.html</xsl:attribute>Global</option>
                       <option><xsl:attribute name="value">http://www.france.fsfeurope.org<xsl:value-of select="/buildinfo/@filename" />.<xsl:value-of select="/buildinfo/@language" />.html</xsl:attribute>France</option>

<option><xsl:attribute name="value">http://www.germany.fsfeurope.org<xsl:value-of select="/buildinfo/@filename" />.<xsl:value-of select="/buildinfo/@language" />.html</xsl:attribute>Germany</option>
<option><xsl:attribute name="value">http://www.italy.fsfeurope.org<xsl:value-of select="/buildinfo/@filename" />.<xsl:value-of select="/buildinfo/@language" />.html</xsl:attribute>Italy</option>
<option><xsl:attribute name="value">http://www.sweden.fsfeurope.org<xsl:value-of select="/buildinfo/@filename" />.<xsl:value-of select="/buildinfo/@language" />.html</xsl:attribute>Sweden</option>
                     </select><br /><br />

                     <input type="submit" name="submit"><xsl:attribute name="value"><xsl:value-of select="/buildinfo/textset/text[@id='selectgo']" /></xsl:attribute></input>
                   </form>
                  </div>
                 </td>
              </tr>
              <!-- <tr>
                <td class="focus-top-hinge">
                   <xsl:value-of select="/buildinfo/textset/text[@id='find']" />
                </td>
                <td class="focus-box">
                  <form method="post" action="/search.cgi">
                    <input type="text" size="10" name="var" />
                  </form>
                </td>
              </tr> -->
            </table>
          </td>
        </tr>
        <tr>
          <td class="line" colspan="2">
            <div align="center">
              <xsl:for-each select="/buildinfo/trlist/tr">
                <xsl:sort select="@id" />
                  <xsl:choose>
                    <xsl:when test="@id=/buildinfo/@language">
                      <xsl:value-of select="." disable-output-escaping="yes" />
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:element name="a">
                        <xsl:attribute name="href"><xsl:value-of select="/buildinfo/@filename" />.<xsl:value-of select="@id" />.html</xsl:attribute>
                        <xsl:value-of select="." disable-output-escaping="yes" />
                      </xsl:element>
                    </xsl:otherwise>
                  </xsl:choose>
                <xsl:text> </xsl:text>
              </xsl:for-each>
              <xsl:if test="/buildinfo/@outdated='yes'"><br />
                <xsl:apply-templates select="/buildinfo/textset/text[@id='outdated']/node()" />
              </xsl:if>
              <xsl:if test="/buildinfo/@language!=/buildinfo/document/@language"><br />
                <xsl:apply-templates select="/buildinfo/textset/text[@id='notranslation']/node()" />
              </xsl:if>
            </div>
          </td>
        </tr>
        <tr>
          <td class="body" valign="top">
            <xsl:apply-templates select="node()"/>
          </td>
          <td class="menu" width="150">
            <xsl:for-each select="/buildinfo/menuset/menu[not(@parent)]">
              <xsl:sort select="@id" />
              <xsl:variable name="id"><xsl:value-of select="@id" /></xsl:variable>
              <a class="menu" href="{.}">
                <xsl:value-of select="/buildinfo/textset/text[@id=$id]" />
              </a> <br />
              <xsl:for-each select="/buildinfo/menuset/menu[@parent=$id]">
                <xsl:sort select="@id" />
                <a class="submenu" href="{.}">
                  <xsl:variable name="mid"><xsl:value-of select="@id" /></xsl:variable>
                  <xsl:value-of select="/buildinfo/textset/text[@id=$mid]" />
                </a> <br />
              </xsl:for-each>
            </xsl:for-each>
          </td>
        </tr>
        <tr>
          <td class="line" colspan="2">
            <div align="center">
              <xsl:apply-templates
                select="/buildinfo/textset/text[@id='copyright']/node()" />
              <!-- "Last changed" magic -->
              <xsl:variable name="timestamp">
                <xsl:value-of select="/buildinfo/document/timestamp" />
              </xsl:variable>
              <!-- FIXME: over time, all pages should have the timestamp -->
              <!--        tags, so this conditional could be removed     -->
              <xsl:if test="string-length ($timestamp) &gt; 0">
                <xsl:variable name="Date">
                  <xsl:value-of select="substring-before (substring-after
                    ($timestamp, 'Date: '), ' $')" />
                </xsl:variable>
                <xsl:variable name="Author">
                  <xsl:value-of select="substring-before (substring-after
                    ($timestamp, 'Author: '), ' $')" />
                </xsl:variable>
                <xsl:apply-templates
                  select="/buildinfo/textset/text[@id='lastchanged']/node()" />
                <xsl:value-of select="translate ($Date, '/', '-')" />
                (<xsl:value-of select="$Author" />)
              </xsl:if>

              <!-- Link to the XHTML source -->
              <xsl:element name="a">
                <xsl:attribute name="href">
                  <xsl:text>/source</xsl:text>
                  <xsl:value-of select="/buildinfo/@filename" />
                  <xsl:text>.</xsl:text>
                  <xsl:value-of select="/buildinfo/document/@language" />
                  <xsl:text>.xhtml</xsl:text>
                </xsl:attribute>
                <xsl:text>[XHTML]</xsl:text>
              </xsl:element>

              <br />
              <xsl:apply-templates
                select="/buildinfo/textset/text[@id='permission']/node()" />
              <br />
              <xsl:apply-templates
                select="/buildinfo/textset/text[@id='webmaster']/node()" />
            </div>
          </td>
        </tr>
      </table>
    </body>
  </xsl:template>

  <xsl:template match="head">
    <head>
      <link rel="stylesheet" href="/blue-new.css" type="text/css" />
      <link rel="icon" href="/favicon.ico" type="image/x-icon" />
      <link rel="shortcut icon" href="/favicon.ico" type="image/x-icon" />
      <xsl:apply-templates select="@*|node()"/>
    </head>
  </xsl:template>

  <xsl:template match="timestamp|buildinfo/set|buildinfo/textset|buildinfo/menuset|buildinfo/trlist" />

  <xsl:template match="@*|node()" priority="-1">
    <xsl:copy>
      <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>
  </xsl:template>

</xsl:stylesheet>
