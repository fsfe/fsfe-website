<?xml version="1.0" encoding="UTF-8"?>
<html newsdate="2008-12-02">
  <version>1</version>


<head>
    <title>Was macht ein Freie-Software-Unternehmen aus?</title>
</head>   

<body> 
	
    <h1>What makes a Free Software company?</h1>

    <p>In den Debatten um die <a
    href="https://blogs.fsfe.org/greve/?p=251">Europäische
    Software-Strategie</a> wurden mehrere Themen von generellem Interesse
    diskutiert, aber die Debatten selbst können aufgrund der Vertraulichkeit
    des Verfahrens nicht veröffentlicht werden. Stattdessen greift dieser
    Artikel ein einzelnes Thema auf und behandelt es aus einer persönlichen
    Perspektive.</p> 

  <p>Obwohl es heute etwas altmodisch klingt, war <em>„Wie verdient man mit <a href="/activities/wipo/fser.html">Freier Software</a> Geld?“</em> noch vor ein paar Jahren eine sehr häufig gestellte Frage. Heute hat sich diese Frage weiterentwickelt zu <em>„Welche erfolgreichen Geschäftsmodelle können basierend auf Freier Software eingesetzt werden?“</em></p>

  <p>Diese Frage ist bereits viel konkreter und sie kam mehrmals während der Diskussionen um die Europäische Software-Strategie auf, mit Hinweisen auf bemerkenswerte Beiträge verschiedener Personen wie z.B. <a href="http://blogs.the451group.com/opensource/2009/02/23/on-open-source-business-strategies-again/">Matthew Aslett</a>, <a href="http://carlodaffara.conecta.it/?p=104">Carlo Daffara</a> oder <a href="http://news.cnet.com/8301-13505_3-10168267-16.html">Matt Asay</a>. Eine weitere Person, die sich vor kurzem mit der Antwort auf diese Frage beschäftigt hat, ist <a href="http://www.thondomraughts.com/2009/03/making-money-with-free-software.html">Anoop John</a>, den ich <a href="https://blogs.fsfe.org/greve/?p=144">vor zwei Jahren in Kerala</a> traf.</p>

  <p>Nachdem ich mehrere Jahre in diesem Bereich praktisch tätig gewesen bin, Unternehmern geholfen habe, funktionierende Geschäftsmodelle zu finden, die Fragen von Freie-Software-Unternehmen diskutiert habe und die Diversität einer Gemeinschaft kennengelernt habe, die gleichzeitig kommerziell und nicht-kommerziell ist, sind mir einige Dinge aufgefallen, die ich nicht für mich behalten möchte.</p>

  <h2>Punkt 1: Denken Sie klar</h2>

  <p>Um Geschäftsstrategien zu entwickeln, ist es zunächst notwendig, ein klares Verständnis für die verschiedenen Aspekte zu haben, die Sie angehen wollen.  Leider wird dies durch die weitverbreitete mehrdeutige Verwendung einiger Begriffe für fundamental verschiedene Konzepte und Sachverhalte nicht gerade leichter gemacht, z.B. indem „Open Source“ für ein Software-Modell, ein Entwicklungsmodell oder ein Geschäftsmodell verwendet wird.</p>

  <p>Diese Modelle sind orthogonal zueinander wie die Achsen eines dreidimensionalen Koordinatensystems, ihre zugehörigen Unterscheidungsmerkmale sind <strong>Kontrolle</strong> (Software-Modell), <strong>Zusammenarbeit</strong> (Entwicklungsmodell) und <strong>Ertrag</strong> (Geschäftsmodell).</p>

  <ul>

  <li>Die <strong>Software-Modell</strong>-Achse wird am häufigsten diskutiert.  Auf der einen Seite gibt es proprietäre Software, bei der der Anbieter die volle Kontrolle über die Software behält und der Benutzer lediglich eine eingeschränkte Benutzungserlaubnis durch eine Lizenz bekommt, die and die Einhaltung bestimmter Bedingungen geknüpft ist. Auf der anderen Seite gibt es Freie Software, die dem Benutzer noch nie dagewesene Kontrolle über die Software gibt, indem sie ihm im Vorhinein das unwiderrufliche und universelle Recht gewährt, die Software zu verwenden, zu verstehen, zu modifizieren und weiterzuverbreiten.</li>

  <li>Die <strong>Entwicklungsmodell</strong>-Achse beschreibt Hindernisse bei der Zusammenarbeit, sie reicht von Projekten, die von einer einzelnen Person oder einem einzelnen Unternehmen entwickelt werden, bis zu Projekten, die eine umfangreiche globale Zusammenarbeit erlauben. Dies ist unabhängig vom Software-Modell. Es gibt unfreie Software, die weitreichende Mitarbeit erlaubt, z.B. SAP mit seinem Partnerprogramm, und Freie-Software-Projekte, die von einer einzelnen Person oder einem einzelnen Unternehmen mit wenigen oder gar keinen Beiträgen von außen entwickelt werden.</li>

  <li>Die <strong>Geschäftsmodell</strong>-Achse beschreibt das für die Software gewählte Ertragsmodell. Unter den Varianten auf dieser Achse befinden sich Schulung, Dienstleistungen, Integration, kundenspezifische Entwicklung, Wartungsverträge, „Commercial Off-the-Shelve“ (COTS), „Software as a Service“ (SaaS) und mehr.</li>

  </ul>

  <p>Diese drei Achsen spannen den Raum auf, in dem sich jedes Software-Projekt und jedes Produkt eines Unternehmens frei positionieren kann. Das heißt nicht, dass alle diese Kombinationen erfolgreich sein werden. Ein auf Lock-in-Strategien basierendes Ertragsmodell mit schnell aufeinanderfolgenden kostenpflichtigen Upgrade-Zyklen wird wahrscheinlich nicht mit Freier Software als zugrundeliegendem Software-Modell funktionieren. Dieser Ansatz basiert typischerweise auf einem proprietären Software-Modell, bei dem das Geschäftsmodell eine obligatorischen Zahlung als eine der Bedingungen für die Erteilung einer Lizenz hat.</p>

  <p>Bemerkenswerterweise überlappen sich die Geschäftsmodelle die auf Basis der unterschiedlichen Software-Modellen möglich sind, viel stärker, als normalerweise angenommen wird. Die grundsätzlich gewährten Rechte des Freie-Software-Modells machen es im Allgemeinen unmöglich, an die Erteilung einer Lizenz Bedingungen zu knüpfen, einschließlich der Bedingung eines Geldtransfers. Aber es ist möglich, im Geschäftsmodell sehr ähnliche Ertragsquellen durch vertragliche Konstrukte, Markenrechte und/oder Zertifizierung zu schaffen.</p>

  <p>Jede dieser Achsen erfordert eine individuelle Abwägung und sorgfältige Planung der Ziele des Projekts.</p>

  <p>Wenn zum Beispiel das Ziel darin besteht, mit Konkurrenten an einer Komponente zu arbeiten, die kein Differenzierungsmerkmal darstellt, um dadurch von einem potenziellen monopolistischen Anbieter unabhängig zu werden, dann erscheint es zweckdienlich, den Schwerpunkt auf die Zusammenarbeit zu legen, und ein Software-Modell zu wählen, dass eine starke Copyleft-Lizenz beinhaltet. Das Geschäftsmodell könnte in diesem Fall vernachlässigt werden, da der erwartete Return on Investment aus strategischen Vorteilen der Unabhängigkeit und aus geringeren Lizenzkosten besteht.</p>

  <p>In einem anderen Fall könnte ein Unternehmen ein auf einer starken Zusammenarbeit basierendes gemeinschaftliches Entwicklungsmodell und eine starke Copyleft-Lizenz wählen mit einem Ertragsmodell, das auf der Zusammenstellung von marktreifen Softwareversionen basiert, die vom Unternehmen für seine Kunden auf Ausgereiftheit, Stabilität und Sicherheit geprüft werden.</p>

  <p>Die Anzahl der möglichen Kombinationen ist beinahe unbegrenzt und die getroffenen Entscheidungen werden den individuellen Charakter jedes Unternehmens und seine Stärken und Schwächen im Wettbewerb bestimmen. Über diese Parameter klar nachzudenken ist ein Schlüsselelement für eine erfolgreiche Geschäftsstrategie.</p>

  <h2>Punkt 2: Freiheit bewegt sich in der Software-Hierarchie nach oben</h2>

  <p>Laut Gartner wird der Einsatz Freier Software bis November 2009 die 100-Prozent-Marke erreichen. Daher ist der Einsatz von Freier Software ein schlechtes Kriterium dafür, was ein Freie-Software-Unternehmen ausmacht. Die Mitwirkung an Freie-Software-Projekten scheint eine etwas bessere Wahl zu sein, aber da viele Freie-Software-Projekte ein kollaboratives Entwicklungsmodell übernommen haben, in dem die Benutzer selbst die Entwicklung vorantreiben, würde diese Bezeichnung dann auch auf Unternehmen zutreffen, die keine Unternehmen der Informationstechnik (IT) sind.</p>

  <p>IT-Unternehmen gehören zu den intensivsten Anwendern von Software, und sie sind oft ein Teil in einer größeren Struktur von Anwendungen. Als Teil dieser Struktur bezieht sich ihr Einsatz von Software nicht nur auf die Arbeitsplatz- und Server-Computer, die von den Angestellten des Unternehmens benutzt werden, sondern auch auf die Plattform, auf der die Software und die Lösungskonzepte basieren, die das Unternehmen anbietet.</p>

  <p>Die Pflege proprietärer eigenentwickelter Plattformen für ein Lösungskonzept ist ineffizient und teuer, und eine Abhängigkeit von anderen proprietären Unternehmen durch die Plattform ist gefährlich. Als Antwort darauf haben große proprietäre Unternehmen angefangen, ihre proprietären Plattformen abzubauen und sich Freier Software zuzuwenden, um die strategischen Vorteile dieses Software-Modells für ihren eigenen Einsatz von Software auf der Ebene der Plattform zu nutzen. Diese Unternehmen interagieren oft auf gute Weise mit den Projekten, von denen sie abhängen, liefern Beiträge und fördern ihr Wachstum und sehen darin einen Weg hin zu strategischer Unabhängigkeit als Benutzer von Software.</p>

  <p>Was diese Unternehmen proprietär macht, ist, dass in den Bereichen, in denen sie nicht primär Benutzer von Software sind, sondern Anbieter gegenüber ihren Kunden, ihr Software-Modell proprietär ist, und sie ihren Kunden dieselben strategischen Vorteile Freier Software vorenthalten, die sie zur Verbesserung ihrer eigenen Wettbewerbsfähigkeit nutzen.</p>

  <p>Aus Kundensicht wird dieses proprietäre Lösungskonzept dann selbst zu einem Teil der Plattform, auf der die Differenzierungsaktivitäten des eigenen Unternehmens aufbauen. Dies ist, wie schon früher erwähnt, eine ineffiziente, teure und gefährliche Strategie.</p>

  <p>Aus Sicht des Markts stellt es eine Ineffizienz dar, die Geschäftschancen für andere Unternehmen eröffnet, die ihren Kunden ein Software-Paket anbieten, das vollständig aus Freier Software besteht, und es ist für die Kunden strategisch und wirtschaftlich vernünftig, diese Anbietern gegenüber den proprietären aus genau denselben Gründen zu bevorzugen, aus denen sich die proprietären Anbieter ihrerseits für Freie-Software-Plattformen entschieden haben.</p>

  <p>Strategisch gesehen sollte sich jedes Unternehemen, dessen Ertragsmodell Komponenten beinhaltet, die auf einem proprietären Software-Modell basieren, darüber im Klaren sein, dass sein Ertrag größtenteils vom Nichtvorhandensein von Freie-Software-Alternativen abhängt und dass sowohl ein Marktwachstum als auch durch das proprietäre Modell erzielte überproportional hohe Gewinne auf andere Unternehmen anziehend wirken werden, wodurch proprietäre Modelle unhaltbar werden. Wenn dieser Moment kommt, kann das Unternehmen dann entweder sein Ertragsmodell in einen anderen Markt verlagern, oder es muss seine Ertragsquelle so umgestalten, dass sie basierend auf einem Software-Modell funktioniert, das vollkommen aus Freier Software besteht.</p>

  <p>Der Einsatz von und die Mitwirkung an Freier Software sind also keine Unterscheidungsmerkmale dafür, was ein Freie-Software-Unternehmen ausmacht. Das entscheidene Unterscheidungsmerkmal ist die Bereitstellung von Freier Software für die Kunden. Mit anderen Worten: Freie-Software-Unternehmen sind Unternehmen, in deren Geschäftsmodellen die Ertragsgenerierung nicht an Lizenzbedingungen eines proprietären Software-Modells gekoppelt ist.</p>

  <h2>Was als Nächstes kommt...</h2>

  <p>Aber natürlich braucht jedes Unternehmen eine Differenzierungsstrategie, auf der sein einzigartiges Verkaufsargument basiert, die eine Sache, die es besser, billiger, schneller kann als irgendjemand sonst und die es seinen Kunden als Grund dafür  nennen kann, dieses bestimmte Unternehmen statt eines anderen zu wählen.</p>

  <p>Traditionell haben viele IT-Unternehmen ihre Einzigartigkeit und Differenzierung auf proprietäre Software-Modelle und Patente gestützt. Dies ist insbesondere im Risikokapitalumfeld sichtbar und ein Mangel an solchen Differenzierungsfaktoren wird oft als eine strategische Schwäche wahrgenommen.</p>

  <p>Daher habe ich vor, in einem meiner nächsten Artikel zu zeigen, wie Differenzierungsstrategien von Freie-Software-Unternehmen genauso stark sein können wie die von proprietären Unternehmen und dass die Differenzierungsstrategien von proprietären Unternehmen oft wesentlich weniger einzigartig sind, als es den Anschein hat.</p>

</body> 

<tags>
  <tag key="front-page"/>
  <tag key="competition">Wettbewerb</tag>
  <tag key="enterprise">Unternehmen</tag>
</tags> 

<author id="greve" />
</html>
