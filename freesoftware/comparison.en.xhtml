<?xml version="1.0" encoding="UTF-8" ?>

<html>
  <version>1</version>

  <head>
    <title>Free Software, Open Source, FOSS, FLOSS - same same but different</title>
  </head>

  <body class="article">
    <p id="category">
      <a href="/freesoftware/freesoftware.html">Free Software</a>
    </p>

    <h1>Free Software, Open Source, FOSS, FLOSS - same same but different</h1>

    <div id="introduction">
    
	<p>
          There are two major terms connected to software you can freely use,
          study, share and improve: Free Software and Open Source. Based on
          them you can also find different combinations and translations like
          FOSS, Libre Software, FLOSS and so on. So why do people use these
          terms, and how are they different from one another?
        </p>

    </div>

    <h2>Historical background</h2>

    <p>
      Historically, Free Software was the first term, created 1986 together
      with the <a href="/freesoftware/freesoftware.html">Free Software
      definition</a>. In 1997 Debian, a project aiming to create a completely free
      and community based GNU/Linux distribution, developed the Debian Free
      Software Guidelines
      (<a href="http://www.debian.org/social_contract#guidelines">DFSG</a>) as a
      check-list whether a program can be included in the distribution or
      not. One year later, the Open Source Initiative (OSI) was set up as a
      <a href="http://web.archive.org/web/20021217003716/http://www.opensource.org/advocacy/faq.html">marketing
      campaign for Free Software</a>. It introduced
      the <a href="http://opensource.org/docs/osd">Open Source definition</a>
      by copying the DFSG and replacing "Free Software" with "Open
      Source". According to
      a <a href="http://lists.debian.org/debian-devel/1999/02/msg01641.html">public
      statement</a> by Bruce Perens, one of the founders of the OSI and author
      of the DFSG and Open Source Definition, the Open Source term was intended
      as a synonym for Free Software. Perens eventually decided to return to
      the roots of the movement and to speak about Free Software again. Thanks
      to their shared roots, both Open Source and Free Software describe the
      complete set and the whole range of software licenses that give users the
      right to use, study, share and improve the software<a class="fn"
      href="#fn1">1</a>.
    </p>

    <p>
      In the course of time people came up with additional labels for the same
      set of software. Today terms such as Libre Software, FOSS (Free and Open
      Source Software) or FLOSS (Free, Libre and Open Source Software) are
      often used to describe Free Software. In some cases people also use terms
      like "organic software" or "ethical software". Often the motivation for
      terms like FOSS or FLOSS is to stay out of the terminology debate and to avoid
      confusion through words like "open" or "free". But these terms tend to cause another
      confusion, because they virtually invite people to look for differences
      between the terms where actually no differences exists, regarding the
      software they describe.
    </p>

    <p>
      This short summary of the historical origin of the different terms should
      show that at the end all of them have the same root and refer to the same
      set of software.
    </p>

    <h2>Who uses which term, and why?</h2>

    <p>
      The Free Software movement is a large and diverse community. People have
      different interests in Free Software and different reasons to
      participate. But these differences don't necessarily connect with the
      terms they use. A lot of people use the term Open Source even while
      highlighting the social and political dimension of Free Software while on
      the other hand there are people in our community who prefer the term
      Free Software but concentrate more on the practical benefits. Whether
      someone says Open Source or Free Software isn't necessarily an indication
      of their motivation.
    </p>

    <p>
      Beside individuals there are also many well known organisations in the
      Free Software ecosystem. Many of them play an important role and
      emphasize different aspects of Free Software. For example, some
      organisations focus on the technical direction of Free Software projects,
      some on legal aspects, some on political, social and ethical aspects and
      some focus on license evaluation. These organisations typically have
      decided to use one or another term and stick to it. But this should not
      lead to the conclusion that the term they use is the critical factor
      regarding their motivations. The critical factor are the people driving
      the organisation and the goals of the organisation as such. The practical
      experience with different organisations and people in the community shows
      that the line can't be drawn along the language they use.
    </p>

    <p>
      This diversity is good, as it shows that Free Software provides many
      advantages in many different areas of our life. But we should not divide
      our community just by the term someone prefers. No matter what term
      someone uses and what their initial motivation is, in the end they works
      on the same set of software and on the enhancement of software freedom
      and any other aspect of Free Software.
    </p>

    <h2>License evaluation</h2>

    <p>
      There are three widely recognized entities in the Free Software movement
      that regularly evaluate licenses: The <a href="http://www.fsf.org">Free
      Software Foundation</a>, the <a href="http://www.debian.org">Debian
      project</a> and the <a href="http://www.opensource.org">Open Source
      Initiative</a>. When asked whether a particular license gives software
      users the freedom to use, study, share and improve the program, they
      almost always come to the same conclusions.
    </p>

    <h2>Does Copyleft make the difference?</h2>

    <p>
      Looking at Free Software licenses there are two main categories,
      protective or <a href="http://www.gnu.org/copyleft/">Copyleft</a>
      licenses and non-protective licenses. While Copyleft licenses are
      designed to protect the rights to use, study, share and improve the
      software non-protective licenses allow to distribute the software without
      those rights.  Sometimes people think that the terms Free Software and
      Open Source are used to distinguish between Copyleft and non-Copyleft
      licenses. The lists of Free Software licenses by Debian, the FSF and the
      OSI show that both protective and non-protective licenses comply with the
      Free Software definition and the Open Source definition. This means that
      neither the terms Open Source and Free Software nor the different
      definitions are suitable to distinguish between Copyleft and non-Copyleft
      licenses. 
    </p>

    <p>
      <center>
        <img src="/freesoftware/softwaremodels.png" alt="This graphic
        should visualise the different software categories and their
        connection" title="This graphic visualises the different software
        categories and their connection"/>
      </center>
    </p>

    <p>
      Protective licenses and non-protective licenses are sub-classes of Free
      Software licenses recognized by the Open Source Initiative and the
      FSF. Copyleft or non-Copyleft is not a criteria suitable to distinguish
      between Open Source and Free Software, both terms describe the same set
      of software.
    </p>

    <h2>Development model</h2>

    <p>
      The way a program is developed can be a crucial factor in its success or
      failure. But whether a program is written in an open, participatory
      process or behind closed doors doesn't tell us whether it is non-free or
      Free Software.
    </p>

    <p>
      When looking at software we have to distinguish between the software
      model and the development model. While the software model describes the
      attributes of the software (e.g. free or proprietary) the development
      model describes different ways to develop software. As discussed in
      detail
      in <a href="/freesoftware/enterprise/freesoftwarecompany.html">"What
      makes a Free Software company?"</a> the different software development
      models are defined independently of the software model and work for both
      Free Software and proprietary software. Models that leverage the
      advantage of an open and collaborative community can show their full
      strength in combination with the Free Software model. However this does
      not mean that any program developed in an open, collaborative development
      process is Free Software. There are Free Software projects developed by a
      single person or a company with little or no outside input. On the other
      hand developers of proprietary software have adapted collaborative
      development models to fit into their software model, e.g. SAP with its
      partnership program.
    </p>


    <h2>Why we call it Free Software</h2>

    <p>
      If all these terms describe the same set of programs, why do we at FSFE
      insist on using the term Free Software?
    </p>

    <p>
      Free Software is all about your freedom. That's a message we want to get
      across loud and clear. Language is important because it frames how people
      think about a subject. The different terms focus on different aspects,
      even if they describe the same software. Freedom is a core value of Free
      Software, and our language reflects this. This makes Free Software the
      right choice for FSFE and we invite you
      to <a href="/activities/whyfs/whyfs">follow us</a>.
    </p>

    <h2 id="fn">Footnotes</h2>

    <ol>
      <li id="fn1">
        <a href="http://www.gnu.org/copyleft/">Copyleft</a> licenses, licenses
        designed to protect those rights, are a subclass of Free Software
        licenses recognized by the Open Source Initiative and the FSF.
      </li>
    </ol>

  </body>

  <author id="schiessle" />
  <date>
    <original content="2012-12-08" />
  </date>
  <sidebar/>
</html>

