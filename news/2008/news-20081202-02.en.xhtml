<?xml version="1.0" encoding="UTF-8"?>
<html newsdate="2008-12-02">
  <version>1</version>


<head>
    <title>What makes a Free Software company?</title>
</head>   

<body> 
	
    <h1>What makes a Free Software company?</h1>

    <p>The debates on the <a
    href="https://blogs.fsfe.org/greve/?p=251">European Software Strategy</a>
    came across several issues that are of general interest, but the debates
    themselves cannot be disclosed for reasons of procedural confidentiality.
    Instead, this article takes one issue and discusses it from a personal
    perspective.</p>

    <p>Although it seems somewhat antiquated today, <em>How do you make money
    with <a href="/activities/wipo/fser.html">Free
    Software?”</a></em> was a very common question just a few years ago. Today,
    that question has evolved into <em>“What are successful business strategies
    that can be implemented on top of Free Software?”</em></p>

    <p>This question is a lot more focussed already, and came up several times
    during the discussions around the European Software Strategy, with pointers
    to noteworthy contributions from various people, such as <a
    href="http://blogs.the451group.com/opensource/2009/02/23/on-open-source-business-strategies-again/">Matthew
    Aslett</a>, <a href="http://carlodaffara.conecta.it/?p=104">Carlo
    Daffara</a> or <a
    href="http://news.cnet.com/8301-13505_3-10168267-16.html">Matt Asay</a>.
    Another person who recently took a shot at answering this question is <a
    href="http://www.thondomraughts.com/2009/03/making-money-with-free-software.html">Anoop
    John</a>, who I met in <a href="https://blogs.fsfe.org/greve/?p=144">Kerala
    two years ago</a>.</p>

    <p>After several years in the field, helping entrepreneurs find business
    models that work for them, discussing the question of Free Software
    companies, and the diversity of a community that is both commercial and
    non-commercial at the same time, a few things occurred to me that I wanted
    to share.</p>

    <h2>Point 1: Think clearly</h2>

    <p>In order to develop business strategies, it is first necessary to have a
    clear understanding of the different aspects that you seek to address.
    Unfortunately this is not made easier by popular ambiguous use of some
    terms for fundamentally different concepts and issues, e.g. “Open Source”
    being used for a software model, development model, or business model.</p>

    <p>These models are orthogonal, like the three axes of the
    three-dimensional coordinate system, their respective differentiators are
    <strong>control</strong> (software model), <strong>collaboration</strong>
    (development model), <strong>revenue</strong> (business model).</p>

    <ul>

    <li>The <strong>software model</strong> axis is the one that is discussed
    most often. On the one hand there is proprietary software, for which the
    vendor retains full control over the software and the user receives limited
    usage permission through a license, which is granted according to certain
    conditions. On the other hand there is Free Software, which provides the
    user with unprecedented control over their software through an ex-ante
    grant of irrevocable and universal rights to use, study, modify and
    distribute the software.</li>

    <li>The <strong>development model</strong> axis describes the barrier to
    collaboration, ranging from projects that are developed by a single person
    or vendor to projects that allow extensive global collaboration. This is
    independent from the software model. There is proprietary software that
    allows for far-reaching collaboration, e.g. SAP with it’s partnership
    program, and Free Software projects that are developed by a single person
    or company with little or no outside input.</li>

    <li>The <strong>business model</strong> axis describes what kind of revenue
    model was chosen for the software. Options on this axis include training,
    services, integration, custom development, subscription models, “Commercial
    Off The Shelve” (COTS), “Software as a Service” (SaaS) and more.</li> </ul>

    <p>These three axes open the space in which any software project and any
    product of any company can freely position itself. That is not to say all
    these combinations will be successful. A revenue model based on lock-in
    strategies with rapid paid upgrade cycles is unlikely to work with Free
    Software as the underlying software model. This approach typically occurs
    on top of a proprietary software model for which the business model
    mandates a completed financial transaction as one of the conditions to
    grant a license.</p>

    <p>It should be noted that the overlap of possible business models on top
    of the different software models is much larger than usually understood.
    The ex-ante grant of the Free Software model makes it generally impossible
    to attach conditions to the granting of a license, including the condition
    of financial transaction. But it is possible to implement very similar
    revenue streams in the business model through contractual constructions,
    trademarks and/or certification.</p>

    <p>Each of these axes warrants individual consideration and careful
    planning for the goals of the project.</p>

    <p>If, for instance the goal is to work with competitors on a
    non-differentiating component in order to achieve independence from a
    potential monopolistic supplier, it would seem appropriate to focus on
    collaboration and choose a software model that includes a strong Copyleft
    licence. The business model could potentially be neglected in this case, as
    the expected return on investment comes in the form of strategic
    independence benefits, and lower licence costs.</p>

    <p>In another case, a company might choose a very collaborative community
    development model on top of a strong Copyleft licence, with a revenue model
    based on enterprise-ready releases that are audited for maturity, stability
    and security by the company for its customers.</p>

    <p>The number of possible combinations is almost endless, and the choices
    made will determine the individual character and competitive strengths and
    weaknesses of each company. Thinking clearly about these parameters is key
    to a successful business strategy.</p>

    <h2>Point 2: Freedom moving up the stack</h2>

    <p>According to Gartner, usage of Free Software will reach 100 percent by
    November 2009. That makes usage of Free Software a poor criterion for what
    makes a Free Software company. Contribution to Free Software projects seems
    a slightly better choice, but as many Free Software projects have adopted a
    collaborative development model in which the users themselves drive
    development, that label would then also apply to companies that aren’t
    Information Technology (IT) companies.</p>

    <p>IT companies are among the most intensive users of software, and will
    often find themselves as part of a larger stack or environment of
    applications. Being part of that stack, their use of software not only
    refers to desktops and servers used by the company’s employees, but also to
    the platform on top of which the company’s software or solution is
    provided.</p>

    <p>Maintaining proprietary custom platforms for a solution is inefficient
    and expensive, and depending upon other proprietary companies for the
    platform is dangerous. In response, large proprietary enterprises have
    begun to phase out their proprietary platforms and are moving towards Free
    Software in order to leverage the strategic advantages provided by this
    software model for their own use of software on the platform level. These
    companies will often interact well with the projects they depend upon,
    contribute to them, and foster their growth as a way to develop strategic
    independence as a user of software.</p>

    <p>What makes these enterprises proprietary is that for the parts where
    they are not primarily users of software, but suppliers to their downstream
    customers, the software model is proprietary, withholding from its
    customers the same strategic benefits of Free Software that the company is
    using to improve its own competitiveness.</p>

    <p>From a customer perspective, that solution itself becomes part of the
    platform on which the company’s differentiating activities are based. This,
    as stated before, is inefficient, expensive and a dangerous strategy.</p>

    <p>Assuming a market perspective, it represents an inefficiency that
    provides business opportunity for other companies to provide customers with
    a stack that is Free Software entirely, and it is strategically and
    economically sane for customers to prefer those providers over proprietary
    ones for the very same reasons that their proprietary suppliers have chosen
    Free Software platforms themselves.</p>

    <p>Strategically speaking, any company that includes proprietary software
    model components in its revenue model should be aware that its revenue flow
    largely depends upon lack of Free Software alternatives, and that growth of
    the market, as well as supernatural profits generated through the
    proprietary model both serve to attract other companies that will make
    proprietary models unsustainable. When that moment comes, the company can
    either move its revenue model to a different market, or it has to transform
    its revenue source to work on top of a software model that is entirely Free
    Software.</p>

    <p>So usage of and contribution to Free Software are not differentiators
    for what makes a Free Software company. The critical differentiator is
    provision of Free Software downstream to customers. In other words: Free
    Software companies are companies that have adopted business models in which
    the revenue streams are not tied to proprietary software model licensing
    conditions.</p>

    <h2>Up next</h2>

    <p>But every company naturally needs a differentiator that provides its
    unique sales proposition, the one thing that it can do better, cheaper,
    faster than anyone else and that provides the reason for customers to
    choose that particular company over another.</p>

    <p>Traditionally, many IT companies have relied upon proprietary software
    models and patents for uniqueness and differentiation. This is particularly
    apparent in the venture capital environment, and lack of these sources of
    uniqueness is often perceived as a strategic weakness.</p>

    <p>So in one of my next articles I am planning to show how differentiators
    used by Free Software companies can be as strong as those of proprietary
    companies, and that the differentiators of proprietary companies are often
    much less unique than it appears.</p>

</body> 

<tags>
  <tag key="front-page"/>
  <tag key="competition">Competition</tag>
  <tag key="enterprise">Enterprise</tag>
</tags> 

<author id="greve" />
</html>
