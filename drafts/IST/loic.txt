<article class="faq" lang="en">
  <articleinfo>
    <title>&title;</title>
    <subtitle>&subtitle;</subtitle>

    <pubdate>September 2001</pubdate>
    <copyright>
      <year>2001</year>
      <holder>Loic Dachary</holder>
    </copyright>

    <legalnotice>
      <para>
        This text is in the public domain.
      </para>
    </legalnotice>

  </articleinfo>


  <sect1>
    <title>Introduction</title>

    <para>
      Although there are many hosting facilities around the world, no
      software package is designed to setup and maintain a set of
      machines dedicated to this purpose. The &NAME; project will
      provide a generic solution that can be used and adapted by all
      of them.
    </para>

    <para>
      Our primary goal is to build a set of packages that is easy to
      install on a virgin machine or a machine already used for other
      purposes. Easy in this case means that one can install a Debian
      unstable distribution and then do an apt-get install task-glitr,
      face at most five screens with questions and is able to
      publicize a URL where people can register to use the facility.
    </para>

    <para>
      Although we have in mind that the set of packages produced could
      be used to build Geocities like hosting facilities, our focus
      will be on development hosting facilities. The main reason for
      this is that our own experience is in this realm. We do not try
      to build a project that will generalize beyond our current
      abilities. We will build a set of package that concentrates what
      we are currently able to do best. Because of our experience we
      are able to fulfill this goal in short delays.
    </para>

    <para>
      We are all ready to spend a large amount of our time on this
      project in the next three months. This is the one reason why we
      believe it can be a success. We also very well know that we need
      results fast. Because it's a pre-condition for successfull &FS;
      projects. And because we are only human beings who need
      rewarding results not too far in the futre. We establish a dead
      line of December 31 2001 for the first usable release.
    </para>

    <para>
      Making sure that &NAME; cannot be jeopardized by non free
      software copyright holders we will take great care that 100% of
      the software involved is &FS;. The &NAME; software will
      be released under the GNU GPL. Since it also involves a large
      number of components we will make sure that none of them depend
      on non free software.
    </para>

  </sect1>

  <sect1>
    <title>Cooperation and leadership</title>

    <para>
      In order to achieve the level of cooperation necessary for the
      project to be friendly to all contributors willing to participate
      in it, we are decide to discuss all matters online. Even if a group
      of us are physically close to each other, we will avoid meetings
      that would exclude people who cannot be in the same room. If and
      when group of people join the project, we will ask them to do the
      same in order to prevent a de facto secret decision process.
    </para>

    <para>
      In the past three days we talked with each other over the phone
      in order to find out if we were all motivated by the idea and all
      ready to jump. From now on all we are going to do will be public and
      visible to all. Our fights, our mistakes, our failures included. 
      There are many reasons to work in the open, the most important one
      being that volunteers who will want to participate in the project
      will only feel at home if they can see all we do and read all our
      discussions. Another reason is that being too secretive leads to
      dead end in many cases. 
    </para>

    <para>
      Each of us agreed to follow the leadership of one of us on a
      specific subject. This is the sole definition of leadership
      &NAME; will ever recognize. None of us is entitled to claim
      leadership except among ourselves, and only because we agreed on
      this in advance. With regard to all the volunteers who will be
      joining the project, leadership will only be de facto and never
      enforced. For all matters we will behave as any volunteer and
      never claim authority on anything.
    </para>

    <para>
      We take a risk by doing so since someone else can indeed become
      very active on the project and takeover the leadership on part
      or all of it. This is a risk worth taking. Our own experience of
      cooperation in projects shows that this happen very rarely and 
      that it's even less likely that someone completly crazy takeover
      and jeopardize the whole project. The reward for taking this risk 
      is that volunteers who would like to devote a burst of energy to
      the project will feel confident to do so, today and in a few years.
      In short, this risk is a precondition to a volunteer friendly &NAME;
      project.
    </para>

    <para>
      <itemizedlist>
	<listitem>
	  <para>
	    Joe A. leads
	    the documentation and the installation/debugging of the releases,
	    using savannah.gnu.org as a testbase.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Joe B leads
	    the backend scripts, linking the database to the system
	    tools.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Joe C
	    leads the system administration, chosing, configuring and patching
	    the necessary services (DNS, mailing lists, CVS...). 
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Joe D
	    leads the code base that interacts with the users of the
	    hosting facility and feeds the database.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Joe E
	    leads the debian packaging of the various components involved.
	  </para>
	</listitem>
      </itemizedlist>
    </para>

  <sect1>
    <title>&FS;</title>

    <para>
      The five of us will be copyright holders of all the files released
      in the &NAME; project. This serves two purposes. First it will make
      it impossible for one of us to change the license from GNU GPL to
      something else. This is an insurance for all of us that the software
      will remain &FS; for ever. Second it makes it a harder for someone
      to threaten &NAME; since we are not living in the same country.
    </para>

    <para>
      An alternative would be to assign copyright to a &FS;
      organization such as the Free Software Foundation. This requires
      some paperwork and could be discussed as we go. The main
      advantage in this case is that the organization will protect the
      project from external threats, paying lawyers, talking to people
      involved in copyright infrigement if needs be. Otherwise we will
      have to do all this ourselves.
    </para>

    <para>
      Making sure our own code is &FS; is the easy part of the problem.
      In order for &NAME; to be useable, a large number of components need
      to be installed. We will take great care that all these components
      are Free Software. We want someone to be able to install a GNU/Linux
      machine running GLITR without any software that is non free. We
      have various reasons to want that, the most important being that
      we don't want anyone to be forced to give up GLITR because a non 
      free software component is not avaible to her. We are not building
      a project for an elite, we are building a project for everyone.
    </para>

    <para>
      We acknowledge that some of us do not believe that having a complete
      Free Software solution is that important. However they agree to comply
      to this rule nevertheless.
    </para>

  </sect1>

  <sect1>
    <title>Orientations</title>

    <para>
    simplicity
    packaging
    modularity
      tradeoff
    internationalization
    customizable look and feel
    </para>

  </sect1>

  <sect1>
    <title>Goals</title>

    <para>
      We need the following items implemented, all optionals except for
      the authentication system and the import/export functions.

      <itemizedlist>
	<listitem>
	  <para>
	    Authentication. Anyone can create an account with associated
	    personal data such as full name and public keys. A logged
	    in user can create a group (or project but in term of 
	    authentication it means creating a group to which users
	    can be added). A set of permission bits is granted to
	    each application by the authentication system, the application
	    decides which semantic a specific bit has. A set of users
	    within a group have the ability to modify the permission bits.
	    (priority 0).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Export and import projects using an XML based format that
	    contains all the data necessary to move projects from one
	    platform to another.
	  </para>
	</listitem>
	<listitem>
	  <para>
	    CVS with ssh/kerberos/gserver/pserver access (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    WebCVS, ViewCVS  (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Tracker declined in support request, bug tracking, patch manager
	    and task manager  (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Forum  (priority 2).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Shell account  (priority 2).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Poll (priority 2).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    HTML pages managed from CVS (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    HTML pages managed from shell account (priority 2).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Mailing lists (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Calendar (priority 2).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Contact database (priority 2).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Statistics (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    DNS management (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    FTP (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    rsync (priority 1).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    Database access (priority 2).
	  </para>
	</listitem>
	<listitem>
	  <para>
	    php (priority 2).
	  </para>
	</listitem>
      </itemizedlist>
    </para>

    <qandaset defaultlabel="qanda">

      <qandadiv>
	<title>Code base</title>

	<qandaentry>
	    <para>
	      Phpgroupware based.
	    </para>
	</qandaentry>

      </qandadiv>

      <qandadiv>
	<title>Documentation</title>

	<qandaentry>
	    <para>
	      Quick start, reference manual, user guide, implementor
	      guide.  The quick start will be 10 pages at most,
	      including screen shots of the installation process. The
	      intended audience is a GNU/Linux system administrator
	      with basic knowledge of the various services installed
	      and an understanding of the purpose of &NAME;. The
	      reference manual will document every component of &NAME;
	      and how they work together. It will be the ultimate
	      source of information for anyone willing to operate,
	      grow or fix a machine running &NAME;. The intended
	      audience is a GNU/Linux system administrator with good
	      knowledge of the various services installed and advanced
	      user of &NAME;.  The user guide will explain in detail
	      how to interact with a machine running &NAME;, how to
	      setup a project on it, and how to manage the
	      project. The intended audience is a GNU/Linux user with
	      basic understanding of the GNU/Linux commands or a
	      developper with basic understanding of the GNU/Linux
	      development tools.  The implementor guide won't have a
	      fixed structure and will provide basic pointers to help
	      volunteers find their way in the project. Only when the
	      project becomes mature enough will the implementor guide
	      be worked in a structured way. The intended audience is
	      a skilled GNU/Linux system administrator and
	      developper. All documentation will be based on DocBook
	      and also available in texinfo and man pages formats.
	    </para>
	</qandaentry>

      </qandadiv>

      <qandadiv>
	<title>Back end scripts</title>

	<qandaentry>
	    <para>
	      Bind the authentication information in the database to
	      the system files/services. Import and export projects
	      automaticaly or upon request.  Update, configure system
	      services for CVS, WebCVS/ViewCVS, trackers, HTML over
	      CVS, mailing lists, statistics, DNS, rsync, FTP,
	      according to the content of the database. Services with
	      priority two are not meant to be usable before the
	      deadline. Scripts are meant to be non intrusive as far
	      as authentication is concerned, meaning that system user
	      accounts and groups may be created that are unrelated to
	      &NAME;. All backend scripts are designed to be installed
	      independently, the only mandatory scripts being
	      authentication and import/export. A library common to
	      all scripts is developped to factorize and normalize
	      interaction with the database. All scripts are designed
	      to be able to run on a machine that is not the same
	      machine as any other services.
	    </para>
	</qandaentry>

      </qandadiv>

      <qandadiv>
	<title>System administration</title>

	<qandaentry>
	    <para>
	      Each system service is installed and configured so that
	      it can be used by the backend scripts. This may involve
	      to modify/custom the original distribution in some
	      cases such as WebCVS/ViewCVS, mailing
	      lists, kernel to allow more group by users + services
	      coping with glibc lossage, DNS to access the database
	      instead of a script, chroot'ed environment for security,
	      reverse proxy ability for FTP service etc. Such
	      modifications will be packaged and generalized in such a
	      way that they can be accepted by the upstream
	      maintainers and integrated in the distribution.
	    </para>
	</qandaentry>

      </qandadiv>

      <qandadiv>
	<title>Packaging</title>

	<qandaentry>
	    <para>
	      The whole set of packages needed to run a &NAME;
	      instance on a specific machine can be installed on a
	      Debian GNU/Linux unstable distribution using apt-get
	      install task-&NAME; and answering debconf questions on a
	      maximum of five screens. Prior to this a line has to be
	      added to the sources.list files so that the necessary
	      modified packaged are found if needed. The task-&NAME;
	      package will be included in the unstable branch and in
	      this case will only be able to run on the basis of
	      unmodified packages. The code base will be in a package
	      by itself, each backend script will have a separate
	      package and modified services will have a package. The
	      rationale behind creating a source list in addition to
	      the standard unstable is that it can contain packaged
	      modified in a way that is completly specific to
	      &NAME;. Although we want to keep this to the minimum it
	      won't be possible to avoid all cases. For instance a
	      kernel patched with NGROUP_MAX raised to 512 may be of
	      no interest to Debian in general. Or a chrooted MySQL
	      server with a quota patch.
	    </para>
	</qandaentry>

      </qandadiv>
    </qandaset>

  </sect1>

</article>
